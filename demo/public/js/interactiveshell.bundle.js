/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/interactiveshell.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../dist/index.js":
/*!************************!*\
  !*** ../dist/index.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * Copyright 2020 Google Inc. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(/*! ./lib/AdbClient */ \"../dist/lib/AdbClient.js\"));\n__export(__webpack_require__(/*! ./lib/AdbConnectionInformation */ \"../dist/lib/AdbConnectionInformation.js\"));\n__export(__webpack_require__(/*! ./lib/Shell */ \"../dist/lib/Shell.js\"));\n__export(__webpack_require__(/*! ./lib/Stream */ \"../dist/lib/Stream.js\"));\n__export(__webpack_require__(/*! ./lib/SyncFrame */ \"../dist/lib/SyncFrame.js\"));\n__export(__webpack_require__(/*! ./lib/message */ \"../dist/lib/message/index.js\"));\n__export(__webpack_require__(/*! ./lib/transport */ \"../dist/lib/transport/index.js\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vZGlzdC9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9kaXN0L2luZGV4LmpzP2M4YjkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKipcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiAgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqICBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiAgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5mdW5jdGlvbiBfX2V4cG9ydChtKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAoIWV4cG9ydHMuaGFzT3duUHJvcGVydHkocCkpIGV4cG9ydHNbcF0gPSBtW3BdO1xufVxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnQocmVxdWlyZShcIi4vbGliL0FkYkNsaWVudFwiKSk7XG5fX2V4cG9ydChyZXF1aXJlKFwiLi9saWIvQWRiQ29ubmVjdGlvbkluZm9ybWF0aW9uXCIpKTtcbl9fZXhwb3J0KHJlcXVpcmUoXCIuL2xpYi9TaGVsbFwiKSk7XG5fX2V4cG9ydChyZXF1aXJlKFwiLi9saWIvU3RyZWFtXCIpKTtcbl9fZXhwb3J0KHJlcXVpcmUoXCIuL2xpYi9TeW5jRnJhbWVcIikpO1xuX19leHBvcnQocmVxdWlyZShcIi4vbGliL21lc3NhZ2VcIikpO1xuX19leHBvcnQocmVxdWlyZShcIi4vbGliL3RyYW5zcG9ydFwiKSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../dist/index.js\n");

/***/ }),

/***/ "../dist/lib/AdbClient.js":
/*!********************************!*\
  !*** ../dist/lib/AdbClient.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright 2020 Google Inc. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst message_1 = __webpack_require__(/*! ./message */ \"../dist/lib/message/index.js\");\nconst Helpers_1 = __webpack_require__(/*! ./Helpers */ \"../dist/lib/Helpers.js\");\nconst AdbConnectionInformation_1 = __webpack_require__(/*! ./AdbConnectionInformation */ \"../dist/lib/AdbConnectionInformation.js\");\nconst Stream_1 = __webpack_require__(/*! ./Stream */ \"../dist/lib/Stream.js\");\nconst Shell_1 = __webpack_require__(/*! ./Shell */ \"../dist/lib/Shell.js\");\nconst Queues_1 = __webpack_require__(/*! ./Queues */ \"../dist/lib/Queues.js\");\nconst Framebuffer_1 = __webpack_require__(/*! ./Framebuffer */ \"../dist/lib/Framebuffer.js\");\nconst VERSION = 0x01000000;\nconst VERSION_NO_CHECKSUM = 0x01000001;\nconst MAX_PAYLOAD = 256 * 1024;\nconst MACHINE_BANNER = 'host::\\0';\nclass AdbClient {\n    /**\n     * Creates a new AdbClient\n     *\n     * @param {Transport} transport the transport layer.\n     */\n    constructor(transport, options, keyStore) {\n        this.transport = transport;\n        this.options = options;\n        this.keyStore = keyStore;\n        this.messageQueue = new Queues_1.AsyncBlockingQueue();\n        this.openStreams = new Set();\n        this.messageChannel = new message_1.MessageChannel(transport, options, this);\n    }\n    registerStream(stream) {\n        this.openStreams.add(stream);\n    }\n    unregisterStream(stream) {\n        this.openStreams.delete(stream);\n    }\n    newMessage(msg) {\n        // Check if this message matches one of the open streams.\n        const streams = Array.from(this.openStreams);\n        for (const stream of streams) {\n            if (stream.consumeMessage(msg)) {\n                return;\n            }\n        }\n        this.messageQueue.enqueue(msg);\n    }\n    awaitMessage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.messageQueue.dequeue();\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const version = this.options.useChecksum ? VERSION : VERSION_NO_CHECKSUM;\n            const cnxn = message_1.Message.cnxn(version, MAX_PAYLOAD, MACHINE_BANNER, this.options.useChecksum);\n            yield this.sendMessage(cnxn); // Send the Message\n            // Response to connect must be CNXN or AUTH. Ignore different responses until the right one\n            // arrives.\n            let response;\n            do {\n                response = yield this.awaitMessage();\n            } while (response.header.cmd !== 'CNXN' && response.header.cmd !== 'AUTH');\n            // Server connected\n            if (response.header.cmd === 'CNXN') {\n                if (!response.data) {\n                    throw new Error('Connection doesn\\'t have data');\n                }\n                return AdbConnectionInformation_1.AdbConnectionInformation.fromDataView(response.data);\n            }\n            // Server asked to authenticate\n            response = yield this.doAuth(response);\n            if (!response.data) {\n                throw new Error('Connection doesn\\'t have data');\n            }\n            return AdbConnectionInformation_1.AdbConnectionInformation.fromDataView(response.data);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.messageChannel.close();\n        });\n    }\n    shell(command) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const stream = yield Stream_1.Stream.open(this, `shell:${command}`, this.options);\n            const response = yield stream.read();\n            yield stream.close();\n            return response.dataAsString() || '';\n        });\n    }\n    framebuffer() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Framebuffer_1.Framebuffer.create(this, this.options);\n        });\n    }\n    interactiveShell(callback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const stream = yield Stream_1.Stream.open(this, 'shell:', this.options);\n            return new Shell_1.Shell(stream, callback);\n        });\n    }\n    sync() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield Stream_1.Stream.open(this, 'sync:', this.options);\n        });\n    }\n    pull(filename) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const syncStream = yield this.sync();\n            const result = yield syncStream.pull(filename);\n            yield syncStream.close();\n            return result;\n        });\n    }\n    doAuth(authResponse) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (authResponse.header.cmd !== 'AUTH') {\n                throw new Error('Not an AUTH response');\n            }\n            if (authResponse.header.arg0 !== 1) {\n                throw new Error(`\n          Invalid AUTH parameter. Expected 1 and received ${authResponse.header.arg0}`);\n            }\n            if (!authResponse.data) {\n                throw new Error('AUTH message doens\\'t contain data');\n            }\n            const token = authResponse.data.buffer;\n            // Try signing with one of the stored keys\n            const keys = yield this.keyStore.loadKeys();\n            for (const key of keys) {\n                const signed = yield crypto.subtle.sign('RSASSA-PKCS1-v1_5', key.privateKey, token);\n                const signatureMessage = message_1.Message.authSignature(new DataView(signed), this.options.useChecksum);\n                yield this.sendMessage(signatureMessage);\n                const signatureResponse = yield this.awaitMessage();\n                if (signatureResponse.header.cmd === 'CNXN') {\n                    return signatureResponse;\n                }\n                console.log('Received message ', signatureResponse, 'from phone');\n            }\n            // None of they saved Keys is usable. Create new key\n            const key = yield AdbClient.generateKey(this.options.dump, this.options.keySize);\n            yield this.keyStore.saveKey(key);\n            const exportedKey = new DataView(yield crypto.subtle.exportKey('spki', key.publicKey));\n            const keyMessage = message_1.Message.authPublicKey(exportedKey, this.options.useChecksum);\n            yield this.sendMessage(keyMessage);\n            if (this.options.debug) {\n                console.log('Waiting for key to be accepted on the device.');\n            }\n            const keyResponse = yield this.awaitMessage();\n            if (keyResponse.header.cmd !== 'CNXN') {\n                console.error('AUTH failed. Phone didn\\'t accept key', keyResponse);\n                throw new Error('AUTH failed. Phone didn\\'t accept key');\n            }\n            return keyResponse;\n        });\n    }\n    sendMessage(m) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.messageChannel.write(m);\n        });\n    }\n    static generateKey(dump, keySize) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const extractable = dump;\n            const key = yield crypto.subtle.generateKey({\n                name: 'RSASSA-PKCS1-v1_5',\n                modulusLength: keySize,\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n                hash: { name: 'SHA-1' }\n            }, extractable, ['sign', 'verify']);\n            if (dump) {\n                yield Helpers_1.privateKeyDump(key);\n            }\n            return key;\n        });\n    }\n}\nexports.AdbClient = AdbClient;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../dist/lib/AdbClient.js\n");

/***/ }),

/***/ "../dist/lib/AdbConnectionInformation.js":
/*!***********************************************!*\
  !*** ../dist/lib/AdbConnectionInformation.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright 2020 Google Inc. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst PRODUCT_NAME_KEY = 'ro.product.name';\nconst PRODUCT_MODEL_KEY = 'ro.product.model';\nconst PRODUCT_DEVICE_KEY = 'ro.product.device';\nconst FEATURES_KEY = 'features';\nconst DEFAULT_PRODUCT_VALUE = '<unkwnown>';\nclass AdbConnectionInformation {\n    constructor(productName, productDevice, productModel, features) {\n        this.productName = productName;\n        this.productDevice = productDevice;\n        this.productModel = productModel;\n        this.features = features;\n    }\n    static fromDataView(input) {\n        const textDecoder = new TextDecoder();\n        const decodedInput = textDecoder.decode(input);\n        return AdbConnectionInformation.fromString(decodedInput);\n    }\n    /**\n     * Creates an AdbConnectionInformation from a Connection string\n     * @param input the string sent as data from a Connection response\n     */\n    static fromString(input) {\n        const start = input.indexOf('::');\n        const properties = input.substring(start + 2).split(';');\n        let productName = DEFAULT_PRODUCT_VALUE;\n        let productDevice = DEFAULT_PRODUCT_VALUE;\n        let productModel = DEFAULT_PRODUCT_VALUE;\n        let features = [];\n        for (const property of properties) {\n            if (property.startsWith(PRODUCT_NAME_KEY)) {\n                productName = property.substring(PRODUCT_NAME_KEY.length + 1);\n                continue;\n            }\n            if (property.startsWith(PRODUCT_MODEL_KEY)) {\n                productModel = property.substring(PRODUCT_MODEL_KEY.length + 1);\n                continue;\n            }\n            if (property.startsWith(PRODUCT_DEVICE_KEY)) {\n                productDevice = property.substring(PRODUCT_DEVICE_KEY.length + 1);\n                continue;\n            }\n            if (property.startsWith(FEATURES_KEY)) {\n                features = property.substring(FEATURES_KEY.length + 1).split(',');\n            }\n        }\n        return new AdbConnectionInformation(productName, productDevice, productModel, features);\n    }\n}\nexports.AdbConnectionInformation = AdbConnectionInformation;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vZGlzdC9saWIvQWRiQ29ubmVjdGlvbkluZm9ybWF0aW9uLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL2Rpc3QvbGliL0FkYkNvbm5lY3Rpb25JbmZvcm1hdGlvbi5qcz8wZTgwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiAgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqICBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiAgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBQUk9EVUNUX05BTUVfS0VZID0gJ3JvLnByb2R1Y3QubmFtZSc7XG5jb25zdCBQUk9EVUNUX01PREVMX0tFWSA9ICdyby5wcm9kdWN0Lm1vZGVsJztcbmNvbnN0IFBST0RVQ1RfREVWSUNFX0tFWSA9ICdyby5wcm9kdWN0LmRldmljZSc7XG5jb25zdCBGRUFUVVJFU19LRVkgPSAnZmVhdHVyZXMnO1xuY29uc3QgREVGQVVMVF9QUk9EVUNUX1ZBTFVFID0gJzx1bmt3bm93bj4nO1xuY2xhc3MgQWRiQ29ubmVjdGlvbkluZm9ybWF0aW9uIHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9kdWN0TmFtZSwgcHJvZHVjdERldmljZSwgcHJvZHVjdE1vZGVsLCBmZWF0dXJlcykge1xuICAgICAgICB0aGlzLnByb2R1Y3ROYW1lID0gcHJvZHVjdE5hbWU7XG4gICAgICAgIHRoaXMucHJvZHVjdERldmljZSA9IHByb2R1Y3REZXZpY2U7XG4gICAgICAgIHRoaXMucHJvZHVjdE1vZGVsID0gcHJvZHVjdE1vZGVsO1xuICAgICAgICB0aGlzLmZlYXR1cmVzID0gZmVhdHVyZXM7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tRGF0YVZpZXcoaW5wdXQpIHtcbiAgICAgICAgY29uc3QgdGV4dERlY29kZXIgPSBuZXcgVGV4dERlY29kZXIoKTtcbiAgICAgICAgY29uc3QgZGVjb2RlZElucHV0ID0gdGV4dERlY29kZXIuZGVjb2RlKGlucHV0KTtcbiAgICAgICAgcmV0dXJuIEFkYkNvbm5lY3Rpb25JbmZvcm1hdGlvbi5mcm9tU3RyaW5nKGRlY29kZWRJbnB1dCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW4gQWRiQ29ubmVjdGlvbkluZm9ybWF0aW9uIGZyb20gYSBDb25uZWN0aW9uIHN0cmluZ1xuICAgICAqIEBwYXJhbSBpbnB1dCB0aGUgc3RyaW5nIHNlbnQgYXMgZGF0YSBmcm9tIGEgQ29ubmVjdGlvbiByZXNwb25zZVxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tU3RyaW5nKGlucHV0KSB7XG4gICAgICAgIGNvbnN0IHN0YXJ0ID0gaW5wdXQuaW5kZXhPZignOjonKTtcbiAgICAgICAgY29uc3QgcHJvcGVydGllcyA9IGlucHV0LnN1YnN0cmluZyhzdGFydCArIDIpLnNwbGl0KCc7Jyk7XG4gICAgICAgIGxldCBwcm9kdWN0TmFtZSA9IERFRkFVTFRfUFJPRFVDVF9WQUxVRTtcbiAgICAgICAgbGV0IHByb2R1Y3REZXZpY2UgPSBERUZBVUxUX1BST0RVQ1RfVkFMVUU7XG4gICAgICAgIGxldCBwcm9kdWN0TW9kZWwgPSBERUZBVUxUX1BST0RVQ1RfVkFMVUU7XG4gICAgICAgIGxldCBmZWF0dXJlcyA9IFtdO1xuICAgICAgICBmb3IgKGNvbnN0IHByb3BlcnR5IG9mIHByb3BlcnRpZXMpIHtcbiAgICAgICAgICAgIGlmIChwcm9wZXJ0eS5zdGFydHNXaXRoKFBST0RVQ1RfTkFNRV9LRVkpKSB7XG4gICAgICAgICAgICAgICAgcHJvZHVjdE5hbWUgPSBwcm9wZXJ0eS5zdWJzdHJpbmcoUFJPRFVDVF9OQU1FX0tFWS5sZW5ndGggKyAxKTtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChwcm9wZXJ0eS5zdGFydHNXaXRoKFBST0RVQ1RfTU9ERUxfS0VZKSkge1xuICAgICAgICAgICAgICAgIHByb2R1Y3RNb2RlbCA9IHByb3BlcnR5LnN1YnN0cmluZyhQUk9EVUNUX01PREVMX0tFWS5sZW5ndGggKyAxKTtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChwcm9wZXJ0eS5zdGFydHNXaXRoKFBST0RVQ1RfREVWSUNFX0tFWSkpIHtcbiAgICAgICAgICAgICAgICBwcm9kdWN0RGV2aWNlID0gcHJvcGVydHkuc3Vic3RyaW5nKFBST0RVQ1RfREVWSUNFX0tFWS5sZW5ndGggKyAxKTtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChwcm9wZXJ0eS5zdGFydHNXaXRoKEZFQVRVUkVTX0tFWSkpIHtcbiAgICAgICAgICAgICAgICBmZWF0dXJlcyA9IHByb3BlcnR5LnN1YnN0cmluZyhGRUFUVVJFU19LRVkubGVuZ3RoICsgMSkuc3BsaXQoJywnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IEFkYkNvbm5lY3Rpb25JbmZvcm1hdGlvbihwcm9kdWN0TmFtZSwgcHJvZHVjdERldmljZSwgcHJvZHVjdE1vZGVsLCBmZWF0dXJlcyk7XG4gICAgfVxufVxuZXhwb3J0cy5BZGJDb25uZWN0aW9uSW5mb3JtYXRpb24gPSBBZGJDb25uZWN0aW9uSW5mb3JtYXRpb247XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../dist/lib/AdbConnectionInformation.js\n");

/***/ }),

/***/ "../dist/lib/Framebuffer.js":
/*!**********************************!*\
  !*** ../dist/lib/Framebuffer.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright 2020 Google Inc. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Stream_1 = __webpack_require__(/*! ./Stream */ \"../dist/lib/Stream.js\");\n/**\n * framebuffer:\n *   This service is used to send snapshots of the framebuffer to a client.\n *   It requires sufficient privileges but works as follow:\n *\n *     After the OKAY, the service sends 16-byte binary structure\n *     containing the following fields (little-endian format):\n *\n *           depth:   uint32_t:    framebuffer depth\n *           size:    uint32_t:    framebuffer size in bytes\n *           width:   uint32_t:    framebuffer width in pixels\n *           height:  uint32_t:    framebuffer height in pixels\n *\n *     With the current implementation, depth is always 16, and\n *     size is always width*height*2\n *\n *     Then, each time the client wants a snapshot, it should send\n *     one byte through the channel, which will trigger the service\n *     to send it 'size' bytes of framebuffer data.\n *\n *     If the adbd daemon doesn't have sufficient privileges to open\n *     the framebuffer device, the connection is simply closed immediately.\n *\n * Definitions from `system/core/adb/daemon/framebuffer_service.cpp`\n *\n * struct fbinfo {\n *   unsigned int version;\n *   unsigned int bpp;\n *   unsigned int colorSpace;\n *   unsigned int size;\n *   unsigned int width;\n *   unsigned int height;\n *   unsigned int red_offset;\n *   unsigned int red_length;\n *   unsigned int blue_offset;\n *   unsigned int blue_length;\n *   unsigned int green_offset;\n *   unsigned int green_length;\n *   unsigned int alpha_offset;\n *   unsigned int alpha_length;\n * }\n */\nclass Framebuffer {\n    constructor(version, bpp, colorSpace, size, width, height, redOffset, redLength, blueOffset, blueLength, greenOffset, greenLength, alphaOffset, alphaLength, imageData) {\n        this.version = version;\n        this.bpp = bpp;\n        this.colorSpace = colorSpace;\n        this.size = size;\n        this.width = width;\n        this.height = height;\n        this.redOffset = redOffset;\n        this.redLength = redLength;\n        this.blueOffset = blueOffset;\n        this.blueLength = blueLength;\n        this.greenOffset = greenOffset;\n        this.greenLength = greenLength;\n        this.alphaOffset = alphaOffset;\n        this.alphaLength = alphaLength;\n        this.imageData = imageData;\n    }\n    static create(adbClient, options) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const stream = yield Stream_1.Stream.open(adbClient, 'framebuffer:', options);\n            let message = yield stream.read();\n            if (message.header.cmd !== 'WRTE') {\n                yield stream.write('CLSE');\n                throw new Error(`Expected WRTE message but received ${message.header.cmd}`);\n            }\n            if (!message.data) {\n                yield stream.write('CLSE');\n                throw new Error('message doesn\\'t contain data');\n            }\n            yield stream.write('OKAY');\n            const version = message.data.getUint32(0, true);\n            const bpp = message.data.getUint32(4, true);\n            const colorSpace = message.data.getUint32(8, true);\n            const size = message.data.getUint32(12, true);\n            const width = message.data.getUint32(16, true);\n            const height = message.data.getUint32(20, true);\n            const redOffset = message.data.getUint32(24, true);\n            const redLength = message.data.getUint32(28, true);\n            const blueOffset = message.data.getUint32(32, true);\n            const blueLength = message.data.getUint32(36, true);\n            const greenOffset = message.data.getUint32(40, true);\n            const greenLength = message.data.getUint32(44, true);\n            const alphaOffset = message.data.getUint32(48, true);\n            const alphaLength = message.data.getUint32(52, true);\n            const buffer = new Uint8Array(size);\n            let bytesReceived = 0;\n            let data = new Uint8Array(message.data.buffer.slice(Framebuffer.BYTE_LENGTH));\n            buffer.set(data, 0);\n            bytesReceived = data.length;\n            while (bytesReceived < size) {\n                message = yield stream.read();\n                if (message.header.cmd === 'CLSE') {\n                    break;\n                }\n                if (!message.data) {\n                    yield stream.write('CLSE');\n                    throw new Error('message doesn\\'t contain data');\n                }\n                data = new Uint8Array((_a = message.data) === null || _a === void 0 ? void 0 : _a.buffer);\n                buffer.set(data, bytesReceived);\n                bytesReceived += data.length;\n                yield stream.write('OKAY');\n            }\n            yield stream.close();\n            return new Framebuffer(version, bpp, colorSpace, size, width, height, redOffset, redLength, blueOffset, blueLength, greenOffset, greenLength, alphaOffset, alphaLength, Uint8ClampedArray.from(buffer));\n        });\n    }\n}\nexports.Framebuffer = Framebuffer;\n// static DDMS_RAWIMAGE_VERSION = 2;\nFramebuffer.BYTE_LENGTH = 56;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../dist/lib/Framebuffer.js\n");

/***/ }),

/***/ "../dist/lib/Helpers.js":
/*!******************************!*\
  !*** ../dist/lib/Helpers.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright 2020 Google Inc. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction paddit(text, width, padding) {\n    const padlen = width - text.length;\n    let padded = '';\n    for (let i = 0; i < padlen; i++) {\n        padded += padding;\n    }\n    return padded + text;\n}\nfunction toHex8(num) {\n    return paddit(num.toString(16), 2, '0');\n}\nexports.toHex8 = toHex8;\nfunction toHex16(num) {\n    return paddit(num.toString(16), 4, '0');\n}\nexports.toHex16 = toHex16;\nfunction toHex32(num) {\n    return paddit(num.toString(16), 8, '0');\n}\nexports.toHex32 = toHex32;\nfunction hexdump(view, prefix = '') {\n    const decoder = new TextDecoder();\n    for (let i = 0; i < view.byteLength; i += 16) {\n        const max = (view.byteLength - i) > 16 ? 16 : (view.byteLength - i);\n        let row = prefix + toHex16(i) + ' ';\n        let j;\n        for (j = 0; j < max; j++) {\n            row += ' ' + toHex8(view.getUint8(i + j));\n        }\n        for (; j < 16; j++) {\n            row += '   ';\n        }\n        row += ' | ' + decoder.decode(new DataView(view.buffer, i, max));\n        console.log(row);\n    }\n}\nexports.hexdump = hexdump;\nfunction toB64(buffer) {\n    return btoa(new Uint8Array(buffer).reduce((s, b) => s + String.fromCharCode(b), ''));\n}\nexports.toB64 = toB64;\nfunction privateKeyDump(key) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!key.privateKey.extractable) {\n            console.log('cannot dump the private key, it\\'s not extractable');\n            return;\n        }\n        const privkey = yield crypto.subtle.exportKey('pkcs8', key.privateKey);\n        console.log(`-----BEGIN PRIVATE KEY-----\\n${toB64(privkey)}\\n-----END PRIVATE KEY-----`);\n    });\n}\nexports.privateKeyDump = privateKeyDump;\nfunction publicKeyDump(key) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!key.publicKey.extractable) {\n            console.log('cannot dump the public key, it\\'s not extractable');\n            return;\n        }\n        const pubKey = yield crypto.subtle.exportKey('spki', key.publicKey);\n        console.log(`-----BEGIN PUBLIC KEY-----\\n${toB64(pubKey)}'\\n-----END PUBLIC KEY-----`);\n    });\n}\nexports.publicKeyDump = publicKeyDump;\nfunction encodeCmd(cmd) {\n    const encoder = new TextEncoder();\n    const buffer = encoder.encode(cmd).buffer;\n    const view = new DataView(buffer);\n    return view.getUint32(0, true);\n}\nexports.encodeCmd = encodeCmd;\nfunction decodeCmd(cmd) {\n    const decoder = new TextDecoder();\n    const buffer = new ArrayBuffer(4);\n    const view = new DataView(buffer);\n    view.setUint32(0, cmd, true);\n    return decoder.decode(buffer);\n}\nexports.decodeCmd = decodeCmd;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vZGlzdC9saWIvSGVscGVycy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9kaXN0L2xpYi9IZWxwZXJzLmpzP2JlOGEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IDIwMjAgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqICB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiAgVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqICBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiAgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZnVuY3Rpb24gcGFkZGl0KHRleHQsIHdpZHRoLCBwYWRkaW5nKSB7XG4gICAgY29uc3QgcGFkbGVuID0gd2lkdGggLSB0ZXh0Lmxlbmd0aDtcbiAgICBsZXQgcGFkZGVkID0gJyc7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwYWRsZW47IGkrKykge1xuICAgICAgICBwYWRkZWQgKz0gcGFkZGluZztcbiAgICB9XG4gICAgcmV0dXJuIHBhZGRlZCArIHRleHQ7XG59XG5mdW5jdGlvbiB0b0hleDgobnVtKSB7XG4gICAgcmV0dXJuIHBhZGRpdChudW0udG9TdHJpbmcoMTYpLCAyLCAnMCcpO1xufVxuZXhwb3J0cy50b0hleDggPSB0b0hleDg7XG5mdW5jdGlvbiB0b0hleDE2KG51bSkge1xuICAgIHJldHVybiBwYWRkaXQobnVtLnRvU3RyaW5nKDE2KSwgNCwgJzAnKTtcbn1cbmV4cG9ydHMudG9IZXgxNiA9IHRvSGV4MTY7XG5mdW5jdGlvbiB0b0hleDMyKG51bSkge1xuICAgIHJldHVybiBwYWRkaXQobnVtLnRvU3RyaW5nKDE2KSwgOCwgJzAnKTtcbn1cbmV4cG9ydHMudG9IZXgzMiA9IHRvSGV4MzI7XG5mdW5jdGlvbiBoZXhkdW1wKHZpZXcsIHByZWZpeCA9ICcnKSB7XG4gICAgY29uc3QgZGVjb2RlciA9IG5ldyBUZXh0RGVjb2RlcigpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdmlldy5ieXRlTGVuZ3RoOyBpICs9IDE2KSB7XG4gICAgICAgIGNvbnN0IG1heCA9ICh2aWV3LmJ5dGVMZW5ndGggLSBpKSA+IDE2ID8gMTYgOiAodmlldy5ieXRlTGVuZ3RoIC0gaSk7XG4gICAgICAgIGxldCByb3cgPSBwcmVmaXggKyB0b0hleDE2KGkpICsgJyAnO1xuICAgICAgICBsZXQgajtcbiAgICAgICAgZm9yIChqID0gMDsgaiA8IG1heDsgaisrKSB7XG4gICAgICAgICAgICByb3cgKz0gJyAnICsgdG9IZXg4KHZpZXcuZ2V0VWludDgoaSArIGopKTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKDsgaiA8IDE2OyBqKyspIHtcbiAgICAgICAgICAgIHJvdyArPSAnICAgJztcbiAgICAgICAgfVxuICAgICAgICByb3cgKz0gJyB8ICcgKyBkZWNvZGVyLmRlY29kZShuZXcgRGF0YVZpZXcodmlldy5idWZmZXIsIGksIG1heCkpO1xuICAgICAgICBjb25zb2xlLmxvZyhyb3cpO1xuICAgIH1cbn1cbmV4cG9ydHMuaGV4ZHVtcCA9IGhleGR1bXA7XG5mdW5jdGlvbiB0b0I2NChidWZmZXIpIHtcbiAgICByZXR1cm4gYnRvYShuZXcgVWludDhBcnJheShidWZmZXIpLnJlZHVjZSgocywgYikgPT4gcyArIFN0cmluZy5mcm9tQ2hhckNvZGUoYiksICcnKSk7XG59XG5leHBvcnRzLnRvQjY0ID0gdG9CNjQ7XG5mdW5jdGlvbiBwcml2YXRlS2V5RHVtcChrZXkpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICBpZiAoIWtleS5wcml2YXRlS2V5LmV4dHJhY3RhYmxlKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnY2Fubm90IGR1bXAgdGhlIHByaXZhdGUga2V5LCBpdFxcJ3Mgbm90IGV4dHJhY3RhYmxlJyk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcHJpdmtleSA9IHlpZWxkIGNyeXB0by5zdWJ0bGUuZXhwb3J0S2V5KCdwa2NzOCcsIGtleS5wcml2YXRlS2V5KTtcbiAgICAgICAgY29uc29sZS5sb2coYC0tLS0tQkVHSU4gUFJJVkFURSBLRVktLS0tLVxcbiR7dG9CNjQocHJpdmtleSl9XFxuLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLWApO1xuICAgIH0pO1xufVxuZXhwb3J0cy5wcml2YXRlS2V5RHVtcCA9IHByaXZhdGVLZXlEdW1wO1xuZnVuY3Rpb24gcHVibGljS2V5RHVtcChrZXkpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICBpZiAoIWtleS5wdWJsaWNLZXkuZXh0cmFjdGFibGUpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdjYW5ub3QgZHVtcCB0aGUgcHVibGljIGtleSwgaXRcXCdzIG5vdCBleHRyYWN0YWJsZScpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHB1YktleSA9IHlpZWxkIGNyeXB0by5zdWJ0bGUuZXhwb3J0S2V5KCdzcGtpJywga2V5LnB1YmxpY0tleSk7XG4gICAgICAgIGNvbnNvbGUubG9nKGAtLS0tLUJFR0lOIFBVQkxJQyBLRVktLS0tLVxcbiR7dG9CNjQocHViS2V5KX0nXFxuLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0tYCk7XG4gICAgfSk7XG59XG5leHBvcnRzLnB1YmxpY0tleUR1bXAgPSBwdWJsaWNLZXlEdW1wO1xuZnVuY3Rpb24gZW5jb2RlQ21kKGNtZCkge1xuICAgIGNvbnN0IGVuY29kZXIgPSBuZXcgVGV4dEVuY29kZXIoKTtcbiAgICBjb25zdCBidWZmZXIgPSBlbmNvZGVyLmVuY29kZShjbWQpLmJ1ZmZlcjtcbiAgICBjb25zdCB2aWV3ID0gbmV3IERhdGFWaWV3KGJ1ZmZlcik7XG4gICAgcmV0dXJuIHZpZXcuZ2V0VWludDMyKDAsIHRydWUpO1xufVxuZXhwb3J0cy5lbmNvZGVDbWQgPSBlbmNvZGVDbWQ7XG5mdW5jdGlvbiBkZWNvZGVDbWQoY21kKSB7XG4gICAgY29uc3QgZGVjb2RlciA9IG5ldyBUZXh0RGVjb2RlcigpO1xuICAgIGNvbnN0IGJ1ZmZlciA9IG5ldyBBcnJheUJ1ZmZlcig0KTtcbiAgICBjb25zdCB2aWV3ID0gbmV3IERhdGFWaWV3KGJ1ZmZlcik7XG4gICAgdmlldy5zZXRVaW50MzIoMCwgY21kLCB0cnVlKTtcbiAgICByZXR1cm4gZGVjb2Rlci5kZWNvZGUoYnVmZmVyKTtcbn1cbmV4cG9ydHMuZGVjb2RlQ21kID0gZGVjb2RlQ21kO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../dist/lib/Helpers.js\n");

/***/ }),

/***/ "../dist/lib/Queues.js":
/*!*****************************!*\
  !*** ../dist/lib/Queues.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright 2020 Google Inc. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass QueueEntry {\n    constructor(data) {\n        this.data = data;\n    }\n}\n/**\n * A linked queue implementation.\n */\nclass Queue {\n    /**\n     * Adds an item to the queue.\n     * @param data\n     */\n    enqueue(data) {\n        const newNode = new QueueEntry(data);\n        if (this.tail) {\n            this.tail.next = newNode;\n        }\n        this.tail = newNode;\n        // Queue is empty. Initialise the head.\n        if (!this.head) {\n            this.head = this.tail;\n        }\n    }\n    /**\n     * Removes an item from the queue and returns it.\n     * @returns {T} the removed item.\n     * @throws an error if the list is empty.\n     */\n    dequeue() {\n        if (this.isEmpty()) {\n            throw new Error('Cannot dequeue. Queue is empty');\n        }\n        const node = this.head.data;\n        this.head = this.head.next;\n        return node;\n    }\n    /**\n     * Checks if the Queues is empty\n     * @returns {boolean} true if the Queue is empty.\n     */\n    isEmpty() {\n        return this.head == null;\n    }\n}\nexports.Queue = Queue;\n/**\n * The AsyncBlockingQueue implements a queue with an asynchronous programming model. Items can\n * be added to the Queue as usual. When dequeing, a Promise is returned.\n *\n * The promise will resolve instantly if the Queue is not empty. If the Queue is empty, the Promise\n * will be resolved when a new item is added to the queue.\n */\nclass AsyncBlockingQueue {\n    constructor() {\n        this.promiseQueue = new Queue();\n        this.resolverQueue = new Queue();\n    }\n    add() {\n        const promise = new Promise(resolve => {\n            this.resolverQueue.enqueue(resolve);\n        });\n        this.promiseQueue.enqueue(promise);\n    }\n    /**\n     * Enqueues an item\n     * @param data\n     */\n    enqueue(data) {\n        if (this.resolverQueue.isEmpty()) {\n            this.add();\n        }\n        const resolve = this.resolverQueue.dequeue();\n        resolve(data);\n    }\n    /**\n     * Asynchronously dequeues an item. If the queue is empty, the returned Promise is resolved when\n     * an item is added. Otherwise, it will return one o the existing items.\n     * @returns {Promise<T>} that resolves to the data.\n     */\n    dequeue() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.promiseQueue.isEmpty()) {\n                this.add();\n            }\n            return this.promiseQueue.dequeue();\n        });\n    }\n    hasPendingPromises() {\n        return !this.promiseQueue.isEmpty();\n    }\n    hasPendingResolvers() {\n        return !this.resolverQueue.isEmpty();\n    }\n}\nexports.AsyncBlockingQueue = AsyncBlockingQueue;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vZGlzdC9saWIvUXVldWVzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL2Rpc3QvbGliL1F1ZXVlcy5qcz84NDNkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiAgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqICBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiAgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNsYXNzIFF1ZXVlRW50cnkge1xuICAgIGNvbnN0cnVjdG9yKGRhdGEpIHtcbiAgICAgICAgdGhpcy5kYXRhID0gZGF0YTtcbiAgICB9XG59XG4vKipcbiAqIEEgbGlua2VkIHF1ZXVlIGltcGxlbWVudGF0aW9uLlxuICovXG5jbGFzcyBRdWV1ZSB7XG4gICAgLyoqXG4gICAgICogQWRkcyBhbiBpdGVtIHRvIHRoZSBxdWV1ZS5cbiAgICAgKiBAcGFyYW0gZGF0YVxuICAgICAqL1xuICAgIGVucXVldWUoZGF0YSkge1xuICAgICAgICBjb25zdCBuZXdOb2RlID0gbmV3IFF1ZXVlRW50cnkoZGF0YSk7XG4gICAgICAgIGlmICh0aGlzLnRhaWwpIHtcbiAgICAgICAgICAgIHRoaXMudGFpbC5uZXh0ID0gbmV3Tm9kZTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnRhaWwgPSBuZXdOb2RlO1xuICAgICAgICAvLyBRdWV1ZSBpcyBlbXB0eS4gSW5pdGlhbGlzZSB0aGUgaGVhZC5cbiAgICAgICAgaWYgKCF0aGlzLmhlYWQpIHtcbiAgICAgICAgICAgIHRoaXMuaGVhZCA9IHRoaXMudGFpbDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZW1vdmVzIGFuIGl0ZW0gZnJvbSB0aGUgcXVldWUgYW5kIHJldHVybnMgaXQuXG4gICAgICogQHJldHVybnMge1R9IHRoZSByZW1vdmVkIGl0ZW0uXG4gICAgICogQHRocm93cyBhbiBlcnJvciBpZiB0aGUgbGlzdCBpcyBlbXB0eS5cbiAgICAgKi9cbiAgICBkZXF1ZXVlKCkge1xuICAgICAgICBpZiAodGhpcy5pc0VtcHR5KCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQ2Fubm90IGRlcXVldWUuIFF1ZXVlIGlzIGVtcHR5Jyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgbm9kZSA9IHRoaXMuaGVhZC5kYXRhO1xuICAgICAgICB0aGlzLmhlYWQgPSB0aGlzLmhlYWQubmV4dDtcbiAgICAgICAgcmV0dXJuIG5vZGU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENoZWNrcyBpZiB0aGUgUXVldWVzIGlzIGVtcHR5XG4gICAgICogQHJldHVybnMge2Jvb2xlYW59IHRydWUgaWYgdGhlIFF1ZXVlIGlzIGVtcHR5LlxuICAgICAqL1xuICAgIGlzRW1wdHkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmhlYWQgPT0gbnVsbDtcbiAgICB9XG59XG5leHBvcnRzLlF1ZXVlID0gUXVldWU7XG4vKipcbiAqIFRoZSBBc3luY0Jsb2NraW5nUXVldWUgaW1wbGVtZW50cyBhIHF1ZXVlIHdpdGggYW4gYXN5bmNocm9ub3VzIHByb2dyYW1taW5nIG1vZGVsLiBJdGVtcyBjYW5cbiAqIGJlIGFkZGVkIHRvIHRoZSBRdWV1ZSBhcyB1c3VhbC4gV2hlbiBkZXF1ZWluZywgYSBQcm9taXNlIGlzIHJldHVybmVkLlxuICpcbiAqIFRoZSBwcm9taXNlIHdpbGwgcmVzb2x2ZSBpbnN0YW50bHkgaWYgdGhlIFF1ZXVlIGlzIG5vdCBlbXB0eS4gSWYgdGhlIFF1ZXVlIGlzIGVtcHR5LCB0aGUgUHJvbWlzZVxuICogd2lsbCBiZSByZXNvbHZlZCB3aGVuIGEgbmV3IGl0ZW0gaXMgYWRkZWQgdG8gdGhlIHF1ZXVlLlxuICovXG5jbGFzcyBBc3luY0Jsb2NraW5nUXVldWUge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLnByb21pc2VRdWV1ZSA9IG5ldyBRdWV1ZSgpO1xuICAgICAgICB0aGlzLnJlc29sdmVyUXVldWUgPSBuZXcgUXVldWUoKTtcbiAgICB9XG4gICAgYWRkKCkge1xuICAgICAgICBjb25zdCBwcm9taXNlID0gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICAgICAgICB0aGlzLnJlc29sdmVyUXVldWUuZW5xdWV1ZShyZXNvbHZlKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMucHJvbWlzZVF1ZXVlLmVucXVldWUocHJvbWlzZSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEVucXVldWVzIGFuIGl0ZW1cbiAgICAgKiBAcGFyYW0gZGF0YVxuICAgICAqL1xuICAgIGVucXVldWUoZGF0YSkge1xuICAgICAgICBpZiAodGhpcy5yZXNvbHZlclF1ZXVlLmlzRW1wdHkoKSkge1xuICAgICAgICAgICAgdGhpcy5hZGQoKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByZXNvbHZlID0gdGhpcy5yZXNvbHZlclF1ZXVlLmRlcXVldWUoKTtcbiAgICAgICAgcmVzb2x2ZShkYXRhKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQXN5bmNocm9ub3VzbHkgZGVxdWV1ZXMgYW4gaXRlbS4gSWYgdGhlIHF1ZXVlIGlzIGVtcHR5LCB0aGUgcmV0dXJuZWQgUHJvbWlzZSBpcyByZXNvbHZlZCB3aGVuXG4gICAgICogYW4gaXRlbSBpcyBhZGRlZC4gT3RoZXJ3aXNlLCBpdCB3aWxsIHJldHVybiBvbmUgbyB0aGUgZXhpc3RpbmcgaXRlbXMuXG4gICAgICogQHJldHVybnMge1Byb21pc2U8VD59IHRoYXQgcmVzb2x2ZXMgdG8gdGhlIGRhdGEuXG4gICAgICovXG4gICAgZGVxdWV1ZSgpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnByb21pc2VRdWV1ZS5pc0VtcHR5KCkpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmFkZCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRoaXMucHJvbWlzZVF1ZXVlLmRlcXVldWUoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGhhc1BlbmRpbmdQcm9taXNlcygpIHtcbiAgICAgICAgcmV0dXJuICF0aGlzLnByb21pc2VRdWV1ZS5pc0VtcHR5KCk7XG4gICAgfVxuICAgIGhhc1BlbmRpbmdSZXNvbHZlcnMoKSB7XG4gICAgICAgIHJldHVybiAhdGhpcy5yZXNvbHZlclF1ZXVlLmlzRW1wdHkoKTtcbiAgICB9XG59XG5leHBvcnRzLkFzeW5jQmxvY2tpbmdRdWV1ZSA9IEFzeW5jQmxvY2tpbmdRdWV1ZTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../dist/lib/Queues.js\n");

/***/ }),

/***/ "../dist/lib/Shell.js":
/*!****************************!*\
  !*** ../dist/lib/Shell.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright 2020 Google Inc. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Shell {\n    constructor(stream, callbackFunction) {\n        this.stream = stream;\n        this.callbackFunction = callbackFunction;\n        this.textDecoder = new TextDecoder();\n        this.textEncoder = new TextEncoder();\n        this.messageListener = [];\n        this.closed = false;\n        this.loopRead();\n    }\n    loopRead() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let message;\n                do {\n                    message = yield this.stream.read();\n                    if (message.header.cmd === 'WRTE') {\n                        this.stream.write('OKAY');\n                        const data = this.textDecoder.decode(message.data);\n                        if (this.callbackFunction) {\n                            this.callbackFunction(data);\n                        }\n                    }\n                    // Resolve Messages waiting for this event\n                    for (const listener of this.messageListener) {\n                        listener(message);\n                    }\n                } while (!this.closed);\n            }\n            catch (e) {\n                console.error('loopRead crashed', e);\n            }\n            this.stream.client.unregisterStream(this.stream);\n        });\n    }\n    waitForMessage(cmd) {\n        return new Promise(resolve => {\n            const callback = (message) => {\n                if (message.header.cmd === cmd) {\n                    const pos = this.messageListener.indexOf(callback);\n                    this.messageListener.splice(pos, 1);\n                    resolve(message);\n                }\n            };\n            this.messageListener.push(callback);\n        });\n    }\n    write(command) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = this.textEncoder.encode(command);\n            yield this.stream.write('WRTE', new DataView(data.buffer));\n            yield this.waitForMessage('OKAY');\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.closed = true;\n            yield this.write('CLSE');\n        });\n    }\n}\nexports.Shell = Shell;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vZGlzdC9saWIvU2hlbGwuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGlzdC9saWIvU2hlbGwuanM/ZDI5MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqICBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiAgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqICBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jbGFzcyBTaGVsbCB7XG4gICAgY29uc3RydWN0b3Ioc3RyZWFtLCBjYWxsYmFja0Z1bmN0aW9uKSB7XG4gICAgICAgIHRoaXMuc3RyZWFtID0gc3RyZWFtO1xuICAgICAgICB0aGlzLmNhbGxiYWNrRnVuY3Rpb24gPSBjYWxsYmFja0Z1bmN0aW9uO1xuICAgICAgICB0aGlzLnRleHREZWNvZGVyID0gbmV3IFRleHREZWNvZGVyKCk7XG4gICAgICAgIHRoaXMudGV4dEVuY29kZXIgPSBuZXcgVGV4dEVuY29kZXIoKTtcbiAgICAgICAgdGhpcy5tZXNzYWdlTGlzdGVuZXIgPSBbXTtcbiAgICAgICAgdGhpcy5jbG9zZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5sb29wUmVhZCgpO1xuICAgIH1cbiAgICBsb29wUmVhZCgpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgbGV0IG1lc3NhZ2U7XG4gICAgICAgICAgICAgICAgZG8ge1xuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlID0geWllbGQgdGhpcy5zdHJlYW0ucmVhZCgpO1xuICAgICAgICAgICAgICAgICAgICBpZiAobWVzc2FnZS5oZWFkZXIuY21kID09PSAnV1JURScpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc3RyZWFtLndyaXRlKCdPS0FZJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBkYXRhID0gdGhpcy50ZXh0RGVjb2Rlci5kZWNvZGUobWVzc2FnZS5kYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmNhbGxiYWNrRnVuY3Rpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNhbGxiYWNrRnVuY3Rpb24oZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgLy8gUmVzb2x2ZSBNZXNzYWdlcyB3YWl0aW5nIGZvciB0aGlzIGV2ZW50XG4gICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgbGlzdGVuZXIgb2YgdGhpcy5tZXNzYWdlTGlzdGVuZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxpc3RlbmVyKG1lc3NhZ2UpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSB3aGlsZSAoIXRoaXMuY2xvc2VkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcignbG9vcFJlYWQgY3Jhc2hlZCcsIGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5zdHJlYW0uY2xpZW50LnVucmVnaXN0ZXJTdHJlYW0odGhpcy5zdHJlYW0pO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgd2FpdEZvck1lc3NhZ2UoY21kKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGNhbGxiYWNrID0gKG1lc3NhZ2UpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAobWVzc2FnZS5oZWFkZXIuY21kID09PSBjbWQpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcG9zID0gdGhpcy5tZXNzYWdlTGlzdGVuZXIuaW5kZXhPZihjYWxsYmFjayk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubWVzc2FnZUxpc3RlbmVyLnNwbGljZShwb3MsIDEpO1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKG1lc3NhZ2UpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB0aGlzLm1lc3NhZ2VMaXN0ZW5lci5wdXNoKGNhbGxiYWNrKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHdyaXRlKGNvbW1hbmQpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IGRhdGEgPSB0aGlzLnRleHRFbmNvZGVyLmVuY29kZShjb21tYW5kKTtcbiAgICAgICAgICAgIHlpZWxkIHRoaXMuc3RyZWFtLndyaXRlKCdXUlRFJywgbmV3IERhdGFWaWV3KGRhdGEuYnVmZmVyKSk7XG4gICAgICAgICAgICB5aWVsZCB0aGlzLndhaXRGb3JNZXNzYWdlKCdPS0FZJyk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBjbG9zZSgpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIHRoaXMuY2xvc2VkID0gdHJ1ZTtcbiAgICAgICAgICAgIHlpZWxkIHRoaXMud3JpdGUoJ0NMU0UnKTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5TaGVsbCA9IFNoZWxsO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../dist/lib/Shell.js\n");

/***/ }),

/***/ "../dist/lib/Stream.js":
/*!*****************************!*\
  !*** ../dist/lib/Stream.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright 2020 Google Inc. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst message_1 = __webpack_require__(/*! ./message */ \"../dist/lib/message/index.js\");\nconst Helpers_1 = __webpack_require__(/*! ./Helpers */ \"../dist/lib/Helpers.js\");\nconst SyncFrame_1 = __webpack_require__(/*! ./SyncFrame */ \"../dist/lib/SyncFrame.js\");\nconst Queues_1 = __webpack_require__(/*! ./Queues */ \"../dist/lib/Queues.js\");\nclass Stream {\n    constructor(client, service, localId, remoteId, options) {\n        this.client = client;\n        this.service = service;\n        this.localId = localId;\n        this.remoteId = remoteId;\n        this.options = options;\n        this.messageQueue = new Queues_1.AsyncBlockingQueue();\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.write('CLSE');\n            if (this.options.debug) {\n                console.log(`Closed stream ${this.service}`);\n                console.log(` local_id: 0x${Helpers_1.toHex32(this.localId)}`);\n                console.log(` remote_id: 0x${Helpers_1.toHex32(this.remoteId)}`);\n            }\n            this.client.unregisterStream(this);\n        });\n    }\n    consumeMessage(msg) {\n        if (msg.header.arg0 === 0 || msg.header.arg0 !== this.remoteId ||\n            msg.header.arg1 === 0 || msg.header.arg1 !== this.localId) {\n            return false;\n        }\n        this.messageQueue.enqueue(msg);\n        return true;\n    }\n    write(cmd, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const message = this.newMessage(cmd, data);\n            yield this.client.sendMessage(message);\n        });\n    }\n    read() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.messageQueue.dequeue();\n        });\n    }\n    /**\n     *\n     * Retrieves a file from device to a local file. The remote path is the path to\n     * the file that will be returned. Just as for the SEND sync request the file\n     * received is split up into chunks. The sync response id is \"DATA\" and length is\n     * the chunk size. After follows chunk size number of bytes. This is repeated\n     * until the file is transferred. Each chunk will not be larger than 64k.\n     * When the file is transferred a sync response \"DONE\" is retrieved where the\n     * length can be ignored.\n     *\n     * @param {string} remotePath path to the file to be pulled from the device\n     * @returns {Promise<Blob>} a Blog with the file contents.\n     */\n    pull(remotePath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const encoder = new TextEncoder();\n            const encodedFilename = encoder.encode(remotePath);\n            // Sends RECV with filename length.\n            const recvFrame = new SyncFrame_1.SyncFrame('RECV', encodedFilename.byteLength);\n            const wrteRecvMessage = this.newMessage('WRTE', recvFrame.toDataView());\n            yield this.client.sendMessage(wrteRecvMessage);\n            const wrteRecvResponse = yield this.read();\n            if (wrteRecvResponse.header.cmd !== 'OKAY') {\n                throw new Error('WRTE/RECV failed: ' + wrteRecvResponse);\n            }\n            // 17. We send the path of the file we want again sdcard/someFile.txt\n            const wrteFilenameMessage = this.newMessage('WRTE', new DataView(encodedFilename.buffer));\n            yield this.client.sendMessage(wrteFilenameMessage);\n            // 18. Device sends us OKAY\n            const wrteFilenameResponse = yield this.read();\n            if (wrteFilenameResponse.header.cmd !== 'OKAY') {\n                throw new Error('WRTE/filename failed: ' + wrteFilenameResponse);\n            }\n            const okayMessage = this.newMessage('OKAY');\n            let fileDataMessage = yield this.read();\n            yield this.client.sendMessage(okayMessage);\n            let syncFrame = SyncFrame_1.SyncFrame.fromDataView(new DataView(fileDataMessage.data.buffer.slice(0, 8)));\n            let buffer = new Uint8Array(fileDataMessage.data.buffer.slice(8));\n            const chunks = [];\n            while (syncFrame.cmd !== 'DONE') {\n                while (syncFrame.byteLength >= buffer.byteLength) {\n                    fileDataMessage = yield this.read();\n                    yield this.client.sendMessage(okayMessage);\n                    // Join both arrays\n                    const newLength = buffer.byteLength + fileDataMessage.data.byteLength;\n                    const newBuffer = new Uint8Array(newLength);\n                    newBuffer.set(buffer, 0);\n                    newBuffer.set(new Uint8Array(fileDataMessage.data.buffer), buffer.byteLength);\n                    buffer = newBuffer;\n                }\n                chunks.push(buffer.slice(0, syncFrame.byteLength).buffer);\n                buffer = buffer.slice(syncFrame.byteLength);\n                syncFrame = SyncFrame_1.SyncFrame.fromDataView(new DataView(buffer.slice(0, 8).buffer));\n                buffer = buffer.slice(8);\n            }\n            return new Blob(chunks);\n        });\n    }\n    newMessage(cmd, data) {\n        return message_1.Message.newMessage(cmd, this.localId, this.remoteId, this.options.useChecksum, data);\n    }\n    static open(adbClient, service, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const localId = Stream.nextId++;\n            let remoteId = 0;\n            const m = message_1.Message.open(localId, remoteId, service, options.useChecksum);\n            yield adbClient.sendMessage(m);\n            let response;\n            do {\n                response = yield adbClient.awaitMessage();\n            } while (response.header.arg1 !== localId);\n            if (response.header.cmd !== 'OKAY') {\n                throw new Error('OPEN Failed');\n            }\n            remoteId = response.header.arg0;\n            if (options.debug) {\n                console.log(`Opened stream ${service}`);\n                console.log(` local_id: 0x${Helpers_1.toHex32(localId)}`);\n                console.log(` remote_id: 0x${Helpers_1.toHex32(remoteId)}`);\n            }\n            const stream = new Stream(adbClient, service, localId, remoteId, options);\n            adbClient.registerStream(stream);\n            return stream;\n        });\n    }\n}\nexports.Stream = Stream;\nStream.nextId = 1;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../dist/lib/Stream.js\n");

/***/ }),

/***/ "../dist/lib/SyncFrame.js":
/*!********************************!*\
  !*** ../dist/lib/SyncFrame.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * Copyright 2020 Google Inc. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Helpers_1 = __webpack_require__(/*! ./Helpers */ \"../dist/lib/Helpers.js\");\nclass SyncFrame {\n    constructor(cmd, byteLength) {\n        this.cmd = cmd;\n        this.byteLength = byteLength;\n    }\n    toDataView() {\n        const data = new ArrayBuffer(8);\n        const cmd = Helpers_1.encodeCmd(this.cmd);\n        const view = new DataView(data);\n        view.setUint32(0, cmd, true);\n        view.setUint32(4, this.byteLength, true);\n        return view;\n    }\n    static fromDataView(dataView) {\n        const cmd = Helpers_1.decodeCmd(dataView.getUint32(0, true));\n        const byteLength = dataView.getUint32(4, true);\n        return new SyncFrame(cmd, byteLength);\n    }\n}\nexports.SyncFrame = SyncFrame;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vZGlzdC9saWIvU3luY0ZyYW1lLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL2Rpc3QvbGliL1N5bmNGcmFtZS5qcz83MmQyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqICBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiAgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqICBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgSGVscGVyc18xID0gcmVxdWlyZShcIi4vSGVscGVyc1wiKTtcbmNsYXNzIFN5bmNGcmFtZSB7XG4gICAgY29uc3RydWN0b3IoY21kLCBieXRlTGVuZ3RoKSB7XG4gICAgICAgIHRoaXMuY21kID0gY21kO1xuICAgICAgICB0aGlzLmJ5dGVMZW5ndGggPSBieXRlTGVuZ3RoO1xuICAgIH1cbiAgICB0b0RhdGFWaWV3KCkge1xuICAgICAgICBjb25zdCBkYXRhID0gbmV3IEFycmF5QnVmZmVyKDgpO1xuICAgICAgICBjb25zdCBjbWQgPSBIZWxwZXJzXzEuZW5jb2RlQ21kKHRoaXMuY21kKTtcbiAgICAgICAgY29uc3QgdmlldyA9IG5ldyBEYXRhVmlldyhkYXRhKTtcbiAgICAgICAgdmlldy5zZXRVaW50MzIoMCwgY21kLCB0cnVlKTtcbiAgICAgICAgdmlldy5zZXRVaW50MzIoNCwgdGhpcy5ieXRlTGVuZ3RoLCB0cnVlKTtcbiAgICAgICAgcmV0dXJuIHZpZXc7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tRGF0YVZpZXcoZGF0YVZpZXcpIHtcbiAgICAgICAgY29uc3QgY21kID0gSGVscGVyc18xLmRlY29kZUNtZChkYXRhVmlldy5nZXRVaW50MzIoMCwgdHJ1ZSkpO1xuICAgICAgICBjb25zdCBieXRlTGVuZ3RoID0gZGF0YVZpZXcuZ2V0VWludDMyKDQsIHRydWUpO1xuICAgICAgICByZXR1cm4gbmV3IFN5bmNGcmFtZShjbWQsIGJ5dGVMZW5ndGgpO1xuICAgIH1cbn1cbmV4cG9ydHMuU3luY0ZyYW1lID0gU3luY0ZyYW1lO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../dist/lib/SyncFrame.js\n");

/***/ }),

/***/ "../dist/lib/message/Message.js":
/*!**************************************!*\
  !*** ../dist/lib/message/Message.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright 2020 Google Inc. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst MessageHeader_1 = __webpack_require__(/*! ./MessageHeader */ \"../dist/lib/message/MessageHeader.js\");\nconst Helpers_1 = __webpack_require__(/*! ../Helpers */ \"../dist/lib/Helpers.js\");\n/**\n * An ADB Message. Contains a {@link MessageHeader} and an optional {@link DataView} with the\n * data for the message.\n */\nclass Message {\n    constructor(header, data) {\n        this.header = header;\n        this.data = data;\n    }\n    /**\n     * Returns the data content as a {@link string} or {@link null} if data is not available.\n     * @returns {string | null} a {@link string} or {@link null} if data is not available.\n     */\n    dataAsString() {\n        if (!this.data) {\n            return null;\n        }\n        const textDecoder = new TextDecoder();\n        return textDecoder.decode(this.data);\n    }\n    /**\n     * Creates a new Message. See {@link MessageHeader}.\n     * @param {string} cmd the command.\n     * @param {number} arg0 value for the first argument.\n     * @param {number} arg1 value for the second argument.\n     * @param {boolean} useChecksum if the checksum for the data should be calculated.\n     * @param {DataView} data message data.\n     * @returns {Message} a new Message\n     */\n    static newMessage(cmd, arg0, arg1, useChecksum, data) {\n        let checksum = 0;\n        let byteLength = 0;\n        if (data) {\n            byteLength = data.byteLength;\n            if (useChecksum) {\n                checksum = Message.checksum(data);\n            }\n        }\n        const header = new MessageHeader_1.MessageHeader(cmd, arg0, arg1, byteLength, checksum);\n        return new Message(header, data);\n    }\n    /**\n     * Creates a new `OPEN` message.\n     * @param {number} localId local stream ID\n     * @param {number} remoteId remote stream ID.\n     * @param {string} service service description\n     * @param {boolean} useChecksum if the checksum for the data should be calculated.\n     * @returns {Message} a correctly setup message with an 'OPEN' command\n     */\n    static open(localId, remoteId, service, useChecksum) {\n        const encoder = new TextEncoder();\n        const data = new DataView(encoder.encode('' + service + '\\0').buffer);\n        return Message.newMessage('OPEN', localId, remoteId, useChecksum, data);\n    }\n    /**\n     * Creates a new `CNXN` message.\n     * @param {number} version version of the protocol to be used.\n     * @param {number} maxPayload maximum payload size for the connection.\n     * @param {string} banner host description.\n     * @param {boolean} useChecksum if the checksum for the data should be calculated.\n     * @returns {Message} a correctly setup message with an 'CNXN' command\n     */\n    static cnxn(version, maxPayload, banner, useChecksum) {\n        const encoder = new TextEncoder();\n        const data = new DataView(encoder.encode(banner).buffer);\n        return Message.newMessage('CNXN', version, maxPayload, useChecksum, data);\n    }\n    /**\n     * Creates a new `AUTH` message, with the a signed token.\n     * @param {DataView} signedToken a DataView with the signed token.\n     * @param {boolean} useChecksum if the checksum for the data should be calculated.\n     * @returns {Message} a correctly setup message with an 'AUTH' command\n     */\n    static authSignature(signedToken, useChecksum) {\n        return Message.newMessage('AUTH', 2, 0, useChecksum, signedToken);\n    }\n    /**\n     * Creates a new `AUTH` message, with the a Public Key.\n     * @param {DataView} publicKey a DataView with the public key\n     * @param {boolean} useChecksum if the checksum for the data should be calculated.\n     * @returns {Message} a correctly setup message with an 'AUTH' command\n     */\n    static authPublicKey(publicKey, useChecksum) {\n        const textEncoder = new TextEncoder();\n        const data = textEncoder.encode(Helpers_1.toB64(publicKey.buffer) + '\\0');\n        return Message.newMessage('AUTH', 3, 0, useChecksum, new DataView(data.buffer));\n    }\n    static checksum(dataView) {\n        let sum = 0;\n        for (let i = 0; i < dataView.byteLength; i++) {\n            sum += dataView.getUint8(i);\n        }\n        return sum & 0xffffffff;\n    }\n}\nexports.Message = Message;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vZGlzdC9saWIvbWVzc2FnZS9NZXNzYWdlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL2Rpc3QvbGliL21lc3NhZ2UvTWVzc2FnZS5qcz9lYmIzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiAgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqICBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiAgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBNZXNzYWdlSGVhZGVyXzEgPSByZXF1aXJlKFwiLi9NZXNzYWdlSGVhZGVyXCIpO1xuY29uc3QgSGVscGVyc18xID0gcmVxdWlyZShcIi4uL0hlbHBlcnNcIik7XG4vKipcbiAqIEFuIEFEQiBNZXNzYWdlLiBDb250YWlucyBhIHtAbGluayBNZXNzYWdlSGVhZGVyfSBhbmQgYW4gb3B0aW9uYWwge0BsaW5rIERhdGFWaWV3fSB3aXRoIHRoZVxuICogZGF0YSBmb3IgdGhlIG1lc3NhZ2UuXG4gKi9cbmNsYXNzIE1lc3NhZ2Uge1xuICAgIGNvbnN0cnVjdG9yKGhlYWRlciwgZGF0YSkge1xuICAgICAgICB0aGlzLmhlYWRlciA9IGhlYWRlcjtcbiAgICAgICAgdGhpcy5kYXRhID0gZGF0YTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgZGF0YSBjb250ZW50IGFzIGEge0BsaW5rIHN0cmluZ30gb3Ige0BsaW5rIG51bGx9IGlmIGRhdGEgaXMgbm90IGF2YWlsYWJsZS5cbiAgICAgKiBAcmV0dXJucyB7c3RyaW5nIHwgbnVsbH0gYSB7QGxpbmsgc3RyaW5nfSBvciB7QGxpbmsgbnVsbH0gaWYgZGF0YSBpcyBub3QgYXZhaWxhYmxlLlxuICAgICAqL1xuICAgIGRhdGFBc1N0cmluZygpIHtcbiAgICAgICAgaWYgKCF0aGlzLmRhdGEpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHRleHREZWNvZGVyID0gbmV3IFRleHREZWNvZGVyKCk7XG4gICAgICAgIHJldHVybiB0ZXh0RGVjb2Rlci5kZWNvZGUodGhpcy5kYXRhKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG5ldyBNZXNzYWdlLiBTZWUge0BsaW5rIE1lc3NhZ2VIZWFkZXJ9LlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjbWQgdGhlIGNvbW1hbmQuXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGFyZzAgdmFsdWUgZm9yIHRoZSBmaXJzdCBhcmd1bWVudC5cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gYXJnMSB2YWx1ZSBmb3IgdGhlIHNlY29uZCBhcmd1bWVudC5cbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IHVzZUNoZWNrc3VtIGlmIHRoZSBjaGVja3N1bSBmb3IgdGhlIGRhdGEgc2hvdWxkIGJlIGNhbGN1bGF0ZWQuXG4gICAgICogQHBhcmFtIHtEYXRhVmlld30gZGF0YSBtZXNzYWdlIGRhdGEuXG4gICAgICogQHJldHVybnMge01lc3NhZ2V9IGEgbmV3IE1lc3NhZ2VcbiAgICAgKi9cbiAgICBzdGF0aWMgbmV3TWVzc2FnZShjbWQsIGFyZzAsIGFyZzEsIHVzZUNoZWNrc3VtLCBkYXRhKSB7XG4gICAgICAgIGxldCBjaGVja3N1bSA9IDA7XG4gICAgICAgIGxldCBieXRlTGVuZ3RoID0gMDtcbiAgICAgICAgaWYgKGRhdGEpIHtcbiAgICAgICAgICAgIGJ5dGVMZW5ndGggPSBkYXRhLmJ5dGVMZW5ndGg7XG4gICAgICAgICAgICBpZiAodXNlQ2hlY2tzdW0pIHtcbiAgICAgICAgICAgICAgICBjaGVja3N1bSA9IE1lc3NhZ2UuY2hlY2tzdW0oZGF0YSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgaGVhZGVyID0gbmV3IE1lc3NhZ2VIZWFkZXJfMS5NZXNzYWdlSGVhZGVyKGNtZCwgYXJnMCwgYXJnMSwgYnl0ZUxlbmd0aCwgY2hlY2tzdW0pO1xuICAgICAgICByZXR1cm4gbmV3IE1lc3NhZ2UoaGVhZGVyLCBkYXRhKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG5ldyBgT1BFTmAgbWVzc2FnZS5cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gbG9jYWxJZCBsb2NhbCBzdHJlYW0gSURcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gcmVtb3RlSWQgcmVtb3RlIHN0cmVhbSBJRC5cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gc2VydmljZSBzZXJ2aWNlIGRlc2NyaXB0aW9uXG4gICAgICogQHBhcmFtIHtib29sZWFufSB1c2VDaGVja3N1bSBpZiB0aGUgY2hlY2tzdW0gZm9yIHRoZSBkYXRhIHNob3VsZCBiZSBjYWxjdWxhdGVkLlxuICAgICAqIEByZXR1cm5zIHtNZXNzYWdlfSBhIGNvcnJlY3RseSBzZXR1cCBtZXNzYWdlIHdpdGggYW4gJ09QRU4nIGNvbW1hbmRcbiAgICAgKi9cbiAgICBzdGF0aWMgb3Blbihsb2NhbElkLCByZW1vdGVJZCwgc2VydmljZSwgdXNlQ2hlY2tzdW0pIHtcbiAgICAgICAgY29uc3QgZW5jb2RlciA9IG5ldyBUZXh0RW5jb2RlcigpO1xuICAgICAgICBjb25zdCBkYXRhID0gbmV3IERhdGFWaWV3KGVuY29kZXIuZW5jb2RlKCcnICsgc2VydmljZSArICdcXDAnKS5idWZmZXIpO1xuICAgICAgICByZXR1cm4gTWVzc2FnZS5uZXdNZXNzYWdlKCdPUEVOJywgbG9jYWxJZCwgcmVtb3RlSWQsIHVzZUNoZWNrc3VtLCBkYXRhKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG5ldyBgQ05YTmAgbWVzc2FnZS5cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gdmVyc2lvbiB2ZXJzaW9uIG9mIHRoZSBwcm90b2NvbCB0byBiZSB1c2VkLlxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBtYXhQYXlsb2FkIG1heGltdW0gcGF5bG9hZCBzaXplIGZvciB0aGUgY29ubmVjdGlvbi5cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gYmFubmVyIGhvc3QgZGVzY3JpcHRpb24uXG4gICAgICogQHBhcmFtIHtib29sZWFufSB1c2VDaGVja3N1bSBpZiB0aGUgY2hlY2tzdW0gZm9yIHRoZSBkYXRhIHNob3VsZCBiZSBjYWxjdWxhdGVkLlxuICAgICAqIEByZXR1cm5zIHtNZXNzYWdlfSBhIGNvcnJlY3RseSBzZXR1cCBtZXNzYWdlIHdpdGggYW4gJ0NOWE4nIGNvbW1hbmRcbiAgICAgKi9cbiAgICBzdGF0aWMgY254bih2ZXJzaW9uLCBtYXhQYXlsb2FkLCBiYW5uZXIsIHVzZUNoZWNrc3VtKSB7XG4gICAgICAgIGNvbnN0IGVuY29kZXIgPSBuZXcgVGV4dEVuY29kZXIoKTtcbiAgICAgICAgY29uc3QgZGF0YSA9IG5ldyBEYXRhVmlldyhlbmNvZGVyLmVuY29kZShiYW5uZXIpLmJ1ZmZlcik7XG4gICAgICAgIHJldHVybiBNZXNzYWdlLm5ld01lc3NhZ2UoJ0NOWE4nLCB2ZXJzaW9uLCBtYXhQYXlsb2FkLCB1c2VDaGVja3N1bSwgZGF0YSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBuZXcgYEFVVEhgIG1lc3NhZ2UsIHdpdGggdGhlIGEgc2lnbmVkIHRva2VuLlxuICAgICAqIEBwYXJhbSB7RGF0YVZpZXd9IHNpZ25lZFRva2VuIGEgRGF0YVZpZXcgd2l0aCB0aGUgc2lnbmVkIHRva2VuLlxuICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gdXNlQ2hlY2tzdW0gaWYgdGhlIGNoZWNrc3VtIGZvciB0aGUgZGF0YSBzaG91bGQgYmUgY2FsY3VsYXRlZC5cbiAgICAgKiBAcmV0dXJucyB7TWVzc2FnZX0gYSBjb3JyZWN0bHkgc2V0dXAgbWVzc2FnZSB3aXRoIGFuICdBVVRIJyBjb21tYW5kXG4gICAgICovXG4gICAgc3RhdGljIGF1dGhTaWduYXR1cmUoc2lnbmVkVG9rZW4sIHVzZUNoZWNrc3VtKSB7XG4gICAgICAgIHJldHVybiBNZXNzYWdlLm5ld01lc3NhZ2UoJ0FVVEgnLCAyLCAwLCB1c2VDaGVja3N1bSwgc2lnbmVkVG9rZW4pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbmV3IGBBVVRIYCBtZXNzYWdlLCB3aXRoIHRoZSBhIFB1YmxpYyBLZXkuXG4gICAgICogQHBhcmFtIHtEYXRhVmlld30gcHVibGljS2V5IGEgRGF0YVZpZXcgd2l0aCB0aGUgcHVibGljIGtleVxuICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gdXNlQ2hlY2tzdW0gaWYgdGhlIGNoZWNrc3VtIGZvciB0aGUgZGF0YSBzaG91bGQgYmUgY2FsY3VsYXRlZC5cbiAgICAgKiBAcmV0dXJucyB7TWVzc2FnZX0gYSBjb3JyZWN0bHkgc2V0dXAgbWVzc2FnZSB3aXRoIGFuICdBVVRIJyBjb21tYW5kXG4gICAgICovXG4gICAgc3RhdGljIGF1dGhQdWJsaWNLZXkocHVibGljS2V5LCB1c2VDaGVja3N1bSkge1xuICAgICAgICBjb25zdCB0ZXh0RW5jb2RlciA9IG5ldyBUZXh0RW5jb2RlcigpO1xuICAgICAgICBjb25zdCBkYXRhID0gdGV4dEVuY29kZXIuZW5jb2RlKEhlbHBlcnNfMS50b0I2NChwdWJsaWNLZXkuYnVmZmVyKSArICdcXDAnKTtcbiAgICAgICAgcmV0dXJuIE1lc3NhZ2UubmV3TWVzc2FnZSgnQVVUSCcsIDMsIDAsIHVzZUNoZWNrc3VtLCBuZXcgRGF0YVZpZXcoZGF0YS5idWZmZXIpKTtcbiAgICB9XG4gICAgc3RhdGljIGNoZWNrc3VtKGRhdGFWaWV3KSB7XG4gICAgICAgIGxldCBzdW0gPSAwO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGRhdGFWaWV3LmJ5dGVMZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgc3VtICs9IGRhdGFWaWV3LmdldFVpbnQ4KGkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzdW0gJiAweGZmZmZmZmZmO1xuICAgIH1cbn1cbmV4cG9ydHMuTWVzc2FnZSA9IE1lc3NhZ2U7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../dist/lib/message/Message.js\n");

/***/ }),

/***/ "../dist/lib/message/MessageChannel.js":
/*!*********************************************!*\
  !*** ../dist/lib/message/MessageChannel.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright 2020 Google Inc. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Message_1 = __webpack_require__(/*! ./Message */ \"../dist/lib/message/Message.js\");\nconst MessageHeader_1 = __webpack_require__(/*! ./MessageHeader */ \"../dist/lib/message/MessageHeader.js\");\nclass MessageChannel {\n    constructor(transport, options, listener) {\n        this.transport = transport;\n        this.options = options;\n        this.listener = listener;\n        this.active = true;\n        this.readLoop();\n    }\n    readLoop() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let message;\n            do {\n                message = yield this.read();\n                if (this.options.debug) {\n                    console.log('<<<', message);\n                }\n                this.listener.newMessage(message);\n            } while (this.active);\n        });\n    }\n    readHeader() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.transport.read(24);\n            return MessageHeader_1.MessageHeader.parse(response, this.options.useChecksum);\n        });\n    }\n    read() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const header = yield this.readHeader();\n            let receivedData;\n            switch (header.cmd) {\n                default: {\n                    if (header.length > 0) {\n                        receivedData = yield this.transport.read(header.length);\n                    }\n                }\n            }\n            const message = new Message_1.Message(header, receivedData);\n            return message;\n        });\n    }\n    close() {\n        this.active = false;\n    }\n    write(m) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.options.debug) {\n                console.log('>>>', m);\n            }\n            const data = m.header.toDataView();\n            yield this.transport.write(data.buffer);\n            if (m.data) {\n                yield this.transport.write(m.data.buffer);\n            }\n        });\n    }\n}\nexports.MessageChannel = MessageChannel;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vZGlzdC9saWIvbWVzc2FnZS9NZXNzYWdlQ2hhbm5lbC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9kaXN0L2xpYi9tZXNzYWdlL01lc3NhZ2VDaGFubmVsLmpzPzk4NDMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IDIwMjAgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqICB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiAgVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqICBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiAgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgTWVzc2FnZV8xID0gcmVxdWlyZShcIi4vTWVzc2FnZVwiKTtcbmNvbnN0IE1lc3NhZ2VIZWFkZXJfMSA9IHJlcXVpcmUoXCIuL01lc3NhZ2VIZWFkZXJcIik7XG5jbGFzcyBNZXNzYWdlQ2hhbm5lbCB7XG4gICAgY29uc3RydWN0b3IodHJhbnNwb3J0LCBvcHRpb25zLCBsaXN0ZW5lcikge1xuICAgICAgICB0aGlzLnRyYW5zcG9ydCA9IHRyYW5zcG9ydDtcbiAgICAgICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgICAgICAgdGhpcy5saXN0ZW5lciA9IGxpc3RlbmVyO1xuICAgICAgICB0aGlzLmFjdGl2ZSA9IHRydWU7XG4gICAgICAgIHRoaXMucmVhZExvb3AoKTtcbiAgICB9XG4gICAgcmVhZExvb3AoKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBsZXQgbWVzc2FnZTtcbiAgICAgICAgICAgIGRvIHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlID0geWllbGQgdGhpcy5yZWFkKCk7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5kZWJ1Zykge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnPDw8JywgbWVzc2FnZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMubGlzdGVuZXIubmV3TWVzc2FnZShtZXNzYWdlKTtcbiAgICAgICAgICAgIH0gd2hpbGUgKHRoaXMuYWN0aXZlKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJlYWRIZWFkZXIoKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IHlpZWxkIHRoaXMudHJhbnNwb3J0LnJlYWQoMjQpO1xuICAgICAgICAgICAgcmV0dXJuIE1lc3NhZ2VIZWFkZXJfMS5NZXNzYWdlSGVhZGVyLnBhcnNlKHJlc3BvbnNlLCB0aGlzLm9wdGlvbnMudXNlQ2hlY2tzdW0pO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmVhZCgpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IGhlYWRlciA9IHlpZWxkIHRoaXMucmVhZEhlYWRlcigpO1xuICAgICAgICAgICAgbGV0IHJlY2VpdmVkRGF0YTtcbiAgICAgICAgICAgIHN3aXRjaCAoaGVhZGVyLmNtZCkge1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGhlYWRlci5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZWNlaXZlZERhdGEgPSB5aWVsZCB0aGlzLnRyYW5zcG9ydC5yZWFkKGhlYWRlci5sZW5ndGgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgbWVzc2FnZSA9IG5ldyBNZXNzYWdlXzEuTWVzc2FnZShoZWFkZXIsIHJlY2VpdmVkRGF0YSk7XG4gICAgICAgICAgICByZXR1cm4gbWVzc2FnZTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNsb3NlKCkge1xuICAgICAgICB0aGlzLmFjdGl2ZSA9IGZhbHNlO1xuICAgIH1cbiAgICB3cml0ZShtKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLmRlYnVnKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJz4+PicsIG0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgZGF0YSA9IG0uaGVhZGVyLnRvRGF0YVZpZXcoKTtcbiAgICAgICAgICAgIHlpZWxkIHRoaXMudHJhbnNwb3J0LndyaXRlKGRhdGEuYnVmZmVyKTtcbiAgICAgICAgICAgIGlmIChtLmRhdGEpIHtcbiAgICAgICAgICAgICAgICB5aWVsZCB0aGlzLnRyYW5zcG9ydC53cml0ZShtLmRhdGEuYnVmZmVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5NZXNzYWdlQ2hhbm5lbCA9IE1lc3NhZ2VDaGFubmVsO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../dist/lib/message/MessageChannel.js\n");

/***/ }),

/***/ "../dist/lib/message/MessageHeader.js":
/*!********************************************!*\
  !*** ../dist/lib/message/MessageHeader.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright 2020 Google Inc. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Helpers_1 = __webpack_require__(/*! ../Helpers */ \"../dist/lib/Helpers.js\");\n/**\n * The header of an ADB message. A header is made of 6 fields, each one with 4 bytes:\n *\n * - command: The command that this message represents.\n * - arg0: The meaning depends on the command.\n * - arg1: The meaning depends on the command.\n * - length: The length of the data part of the message.\n * - checksum: Checksum for the data part of the message. Only used in version 0x01000000 of the\n *   protocol.\n * - magic: a checksum for the command. Effectivelly, `command ^ 0xffffffff`.\n */\nclass MessageHeader {\n    /**\n     * Creates a new MessageHeader\n     *\n     * @param {string} cmd The command that this message represents.\n     * @param {number} arg0 The meaning depends on the command.\n     * @param {number} arg1 The meaning depends on the command.\n     * @param {number} length The length of the data part of the message.\n     * @param {number} checksum Checksum for the data part of the message. Only used in version 0x01000000 of the\n     * protocol.\n     */\n    constructor(cmd, arg0, arg1, length, checksum) {\n        this.cmd = cmd;\n        this.arg0 = arg0;\n        this.arg1 = arg1;\n        this.length = length;\n        this.checksum = checksum;\n    }\n    /**\n     * Converts the MessageHeader into a {@link DataView}.\n     * @returns {DataView} a DataView with 24 bytes, with the header content.\n     */\n    toDataView() {\n        const view = new DataView(new ArrayBuffer(24));\n        const rawCmd = Helpers_1.encodeCmd(this.cmd);\n        const magic = rawCmd ^ 0xffffffff;\n        view.setUint32(0, rawCmd, true);\n        view.setUint32(4, this.arg0, true);\n        view.setUint32(8, this.arg1, true);\n        view.setUint32(12, this.length, true);\n        view.setUint32(16, this.checksum, true);\n        view.setUint32(20, magic, true);\n        return view;\n    }\n    /**\n     * Creates a header from a {@link DataView}.\n     * @param {DataView} data the {@link DataView} that will be used to create the header.\n     * @param {boolean} useChecksum if the checksum should be verified.\n     */\n    static parse(data, useChecksum = false) {\n        const cmd = data.getUint32(0, true);\n        const arg0 = data.getUint32(4, true);\n        const arg1 = data.getUint32(8, true);\n        const len = data.getUint32(12, true);\n        const checksum = data.getUint32(16, true);\n        // Android seems to have stopped providing checksums\n        if (useChecksum && data.byteLength > 20) {\n            const magic = data.getUint32(20, true);\n            if ((cmd ^ magic) !== -1) {\n                throw new Error('magic mismatch');\n            }\n        }\n        return new MessageHeader(Helpers_1.decodeCmd(cmd), arg0, arg1, len, checksum);\n    }\n}\nexports.MessageHeader = MessageHeader;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vZGlzdC9saWIvbWVzc2FnZS9NZXNzYWdlSGVhZGVyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL2Rpc3QvbGliL21lc3NhZ2UvTWVzc2FnZUhlYWRlci5qcz9hODUyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiAgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqICBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiAgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBIZWxwZXJzXzEgPSByZXF1aXJlKFwiLi4vSGVscGVyc1wiKTtcbi8qKlxuICogVGhlIGhlYWRlciBvZiBhbiBBREIgbWVzc2FnZS4gQSBoZWFkZXIgaXMgbWFkZSBvZiA2IGZpZWxkcywgZWFjaCBvbmUgd2l0aCA0IGJ5dGVzOlxuICpcbiAqIC0gY29tbWFuZDogVGhlIGNvbW1hbmQgdGhhdCB0aGlzIG1lc3NhZ2UgcmVwcmVzZW50cy5cbiAqIC0gYXJnMDogVGhlIG1lYW5pbmcgZGVwZW5kcyBvbiB0aGUgY29tbWFuZC5cbiAqIC0gYXJnMTogVGhlIG1lYW5pbmcgZGVwZW5kcyBvbiB0aGUgY29tbWFuZC5cbiAqIC0gbGVuZ3RoOiBUaGUgbGVuZ3RoIG9mIHRoZSBkYXRhIHBhcnQgb2YgdGhlIG1lc3NhZ2UuXG4gKiAtIGNoZWNrc3VtOiBDaGVja3N1bSBmb3IgdGhlIGRhdGEgcGFydCBvZiB0aGUgbWVzc2FnZS4gT25seSB1c2VkIGluIHZlcnNpb24gMHgwMTAwMDAwMCBvZiB0aGVcbiAqICAgcHJvdG9jb2wuXG4gKiAtIG1hZ2ljOiBhIGNoZWNrc3VtIGZvciB0aGUgY29tbWFuZC4gRWZmZWN0aXZlbGx5LCBgY29tbWFuZCBeIDB4ZmZmZmZmZmZgLlxuICovXG5jbGFzcyBNZXNzYWdlSGVhZGVyIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbmV3IE1lc3NhZ2VIZWFkZXJcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjbWQgVGhlIGNvbW1hbmQgdGhhdCB0aGlzIG1lc3NhZ2UgcmVwcmVzZW50cy5cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gYXJnMCBUaGUgbWVhbmluZyBkZXBlbmRzIG9uIHRoZSBjb21tYW5kLlxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBhcmcxIFRoZSBtZWFuaW5nIGRlcGVuZHMgb24gdGhlIGNvbW1hbmQuXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGxlbmd0aCBUaGUgbGVuZ3RoIG9mIHRoZSBkYXRhIHBhcnQgb2YgdGhlIG1lc3NhZ2UuXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGNoZWNrc3VtIENoZWNrc3VtIGZvciB0aGUgZGF0YSBwYXJ0IG9mIHRoZSBtZXNzYWdlLiBPbmx5IHVzZWQgaW4gdmVyc2lvbiAweDAxMDAwMDAwIG9mIHRoZVxuICAgICAqIHByb3RvY29sLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGNtZCwgYXJnMCwgYXJnMSwgbGVuZ3RoLCBjaGVja3N1bSkge1xuICAgICAgICB0aGlzLmNtZCA9IGNtZDtcbiAgICAgICAgdGhpcy5hcmcwID0gYXJnMDtcbiAgICAgICAgdGhpcy5hcmcxID0gYXJnMTtcbiAgICAgICAgdGhpcy5sZW5ndGggPSBsZW5ndGg7XG4gICAgICAgIHRoaXMuY2hlY2tzdW0gPSBjaGVja3N1bTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ29udmVydHMgdGhlIE1lc3NhZ2VIZWFkZXIgaW50byBhIHtAbGluayBEYXRhVmlld30uXG4gICAgICogQHJldHVybnMge0RhdGFWaWV3fSBhIERhdGFWaWV3IHdpdGggMjQgYnl0ZXMsIHdpdGggdGhlIGhlYWRlciBjb250ZW50LlxuICAgICAqL1xuICAgIHRvRGF0YVZpZXcoKSB7XG4gICAgICAgIGNvbnN0IHZpZXcgPSBuZXcgRGF0YVZpZXcobmV3IEFycmF5QnVmZmVyKDI0KSk7XG4gICAgICAgIGNvbnN0IHJhd0NtZCA9IEhlbHBlcnNfMS5lbmNvZGVDbWQodGhpcy5jbWQpO1xuICAgICAgICBjb25zdCBtYWdpYyA9IHJhd0NtZCBeIDB4ZmZmZmZmZmY7XG4gICAgICAgIHZpZXcuc2V0VWludDMyKDAsIHJhd0NtZCwgdHJ1ZSk7XG4gICAgICAgIHZpZXcuc2V0VWludDMyKDQsIHRoaXMuYXJnMCwgdHJ1ZSk7XG4gICAgICAgIHZpZXcuc2V0VWludDMyKDgsIHRoaXMuYXJnMSwgdHJ1ZSk7XG4gICAgICAgIHZpZXcuc2V0VWludDMyKDEyLCB0aGlzLmxlbmd0aCwgdHJ1ZSk7XG4gICAgICAgIHZpZXcuc2V0VWludDMyKDE2LCB0aGlzLmNoZWNrc3VtLCB0cnVlKTtcbiAgICAgICAgdmlldy5zZXRVaW50MzIoMjAsIG1hZ2ljLCB0cnVlKTtcbiAgICAgICAgcmV0dXJuIHZpZXc7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBoZWFkZXIgZnJvbSBhIHtAbGluayBEYXRhVmlld30uXG4gICAgICogQHBhcmFtIHtEYXRhVmlld30gZGF0YSB0aGUge0BsaW5rIERhdGFWaWV3fSB0aGF0IHdpbGwgYmUgdXNlZCB0byBjcmVhdGUgdGhlIGhlYWRlci5cbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IHVzZUNoZWNrc3VtIGlmIHRoZSBjaGVja3N1bSBzaG91bGQgYmUgdmVyaWZpZWQuXG4gICAgICovXG4gICAgc3RhdGljIHBhcnNlKGRhdGEsIHVzZUNoZWNrc3VtID0gZmFsc2UpIHtcbiAgICAgICAgY29uc3QgY21kID0gZGF0YS5nZXRVaW50MzIoMCwgdHJ1ZSk7XG4gICAgICAgIGNvbnN0IGFyZzAgPSBkYXRhLmdldFVpbnQzMig0LCB0cnVlKTtcbiAgICAgICAgY29uc3QgYXJnMSA9IGRhdGEuZ2V0VWludDMyKDgsIHRydWUpO1xuICAgICAgICBjb25zdCBsZW4gPSBkYXRhLmdldFVpbnQzMigxMiwgdHJ1ZSk7XG4gICAgICAgIGNvbnN0IGNoZWNrc3VtID0gZGF0YS5nZXRVaW50MzIoMTYsIHRydWUpO1xuICAgICAgICAvLyBBbmRyb2lkIHNlZW1zIHRvIGhhdmUgc3RvcHBlZCBwcm92aWRpbmcgY2hlY2tzdW1zXG4gICAgICAgIGlmICh1c2VDaGVja3N1bSAmJiBkYXRhLmJ5dGVMZW5ndGggPiAyMCkge1xuICAgICAgICAgICAgY29uc3QgbWFnaWMgPSBkYXRhLmdldFVpbnQzMigyMCwgdHJ1ZSk7XG4gICAgICAgICAgICBpZiAoKGNtZCBeIG1hZ2ljKSAhPT0gLTEpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ21hZ2ljIG1pc21hdGNoJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBNZXNzYWdlSGVhZGVyKEhlbHBlcnNfMS5kZWNvZGVDbWQoY21kKSwgYXJnMCwgYXJnMSwgbGVuLCBjaGVja3N1bSk7XG4gICAgfVxufVxuZXhwb3J0cy5NZXNzYWdlSGVhZGVyID0gTWVzc2FnZUhlYWRlcjtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../dist/lib/message/MessageHeader.js\n");

/***/ }),

/***/ "../dist/lib/message/index.js":
/*!************************************!*\
  !*** ../dist/lib/message/index.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright 2020 Google Inc. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(/*! ./Message */ \"../dist/lib/message/Message.js\"));\n__export(__webpack_require__(/*! ./MessageChannel */ \"../dist/lib/message/MessageChannel.js\"));\n__export(__webpack_require__(/*! ./MessageHeader */ \"../dist/lib/message/MessageHeader.js\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vZGlzdC9saWIvbWVzc2FnZS9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9kaXN0L2xpYi9tZXNzYWdlL2luZGV4LmpzPzFkMTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IDIwMjAgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqICB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiAgVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqICBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiAgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmZ1bmN0aW9uIF9fZXhwb3J0KG0pIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmICghZXhwb3J0cy5oYXNPd25Qcm9wZXJ0eShwKSkgZXhwb3J0c1twXSA9IG1bcF07XG59XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydChyZXF1aXJlKFwiLi9NZXNzYWdlXCIpKTtcbl9fZXhwb3J0KHJlcXVpcmUoXCIuL01lc3NhZ2VDaGFubmVsXCIpKTtcbl9fZXhwb3J0KHJlcXVpcmUoXCIuL01lc3NhZ2VIZWFkZXJcIikpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../dist/lib/message/index.js\n");

/***/ }),

/***/ "../dist/lib/transport/WebUsbTransport.js":
/*!************************************************!*\
  !*** ../dist/lib/transport/WebUsbTransport.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright 2020 Google Inc. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Helpers_1 = __webpack_require__(/*! ../Helpers */ \"../dist/lib/Helpers.js\");\nconst ADB_DEVICE = { classCode: 255, subclassCode: 66, protocolCode: 1 };\nconst FASTBOOT_DEVICE = { classCode: 255, subclassCode: 66, protocolCode: 3 };\nconst DEVICE_FILTERS = [ADB_DEVICE, FASTBOOT_DEVICE];\n/**\n * An implementation of {@link Transport} using WebUSB as the tranport layer.\n */\nclass WebUsbTransport {\n    constructor(device, match, endpointIn, endpointOut, options, log = console.log) {\n        this.device = device;\n        this.match = match;\n        this.endpointIn = endpointIn;\n        this.endpointOut = endpointOut;\n        this.options = options;\n        this.log = log;\n    }\n    /**\n     *  Releases the interface and closes the connection to the WebUSB device\n     */\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.device.releaseInterface(this.match.intf.interfaceNumber);\n            yield this.device.close();\n        });\n    }\n    /**\n     * Sends data to the USB device\n     *\n     * @param {ArrayBuffer} data the data to be sent to the interface\n     */\n    write(data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.options.dump) {\n                Helpers_1.hexdump(new DataView(data), '' + this.endpointOut + '==> ');\n            }\n            yield this.device.transferOut(this.endpointOut, data);\n        });\n    }\n    /**\n     * Receives data from the USB device\n     *\n     * @param {number} len the length of date to be read\n     * @returns {Promise<DataView} data read from the device\n     */\n    read(len) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.device.transferIn(this.endpointIn, len);\n            if (!response.data) {\n                throw new Error('Response didn\\'t contain any data');\n            }\n            return response.data;\n        });\n    }\n    /**\n     * @returns {boolean} true if the connected device is an ADB device.\n     */\n    isAdb() {\n        const match = WebUsbTransport.findMatch(this.device, ADB_DEVICE);\n        return match != null;\n    }\n    ;\n    /**\n     * @returns {boolean} true if the connected device is a Fastboot device.\n     */\n    isFastboot() {\n        const match = WebUsbTransport.findMatch(this.device, FASTBOOT_DEVICE);\n        return match != null;\n    }\n    ;\n    /**\n     * Opens a connection to a WebUSB device\n     *\n     * @param options\n     */\n    static open(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const device = yield navigator.usb.requestDevice({ filters: DEVICE_FILTERS });\n            yield device.open();\n            // Find the WebUSB device\n            const match = this.findMatch(device, ADB_DEVICE);\n            if (!match) {\n                throw new Error('Could not find an ADB device');\n            }\n            // Select the configuration and claim the interface\n            yield device.selectConfiguration(match.conf.configurationValue);\n            yield device.claimInterface(match.intf.interfaceNumber);\n            // await device.selectAlternateInterface(\n            //     match.intf.interfaceNumber, match.alternate.alternateSetting);\n            // Store the correct endpoints\n            const endpointIn = WebUsbTransport.getEndpointNum(match.alternate.endpoints, 'in');\n            const endpointOut = WebUsbTransport.getEndpointNum(match.alternate.endpoints, 'out');\n            const transport = new WebUsbTransport(device, match, endpointIn, endpointOut, options);\n            if (options.debug) {\n                console.log('Created new Transport: ', transport);\n            }\n            return transport;\n        });\n    }\n    static findMatch(device, filter) {\n        for (const configuration of device.configurations) {\n            for (const intf of configuration.interfaces) {\n                for (const alternate of intf.alternates) {\n                    if (filter.classCode === alternate.interfaceClass &&\n                        filter.subclassCode === alternate.interfaceSubclass &&\n                        filter.protocolCode === alternate.interfaceProtocol) {\n                        return {\n                            conf: configuration,\n                            intf,\n                            alternate\n                        };\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    static getEndpointNum(endpoints, dir, type = 'bulk') {\n        for (const ep of endpoints) {\n            if (ep.direction === dir && ep.type === type) {\n                return ep.endpointNumber;\n            }\n        }\n        throw new Error(`Cannot find ${dir} endpoint`);\n    }\n}\nexports.WebUsbTransport = WebUsbTransport;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../dist/lib/transport/WebUsbTransport.js\n");

/***/ }),

/***/ "../dist/lib/transport/index.js":
/*!**************************************!*\
  !*** ../dist/lib/transport/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright 2020 Google Inc. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(/*! ./WebUsbTransport */ \"../dist/lib/transport/WebUsbTransport.js\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vZGlzdC9saWIvdHJhbnNwb3J0L2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL2Rpc3QvbGliL3RyYW5zcG9ydC9pbmRleC5qcz9mM2U2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiAgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqICBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiAgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5mdW5jdGlvbiBfX2V4cG9ydChtKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAoIWV4cG9ydHMuaGFzT3duUHJvcGVydHkocCkpIGV4cG9ydHNbcF0gPSBtW3BdO1xufVxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnQocmVxdWlyZShcIi4vV2ViVXNiVHJhbnNwb3J0XCIpKTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../dist/lib/transport/index.js\n");

/***/ }),

/***/ "./src/interactiveshell.ts":
/*!*********************************!*\
  !*** ./src/interactiveshell.ts ***!
  \*********************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var wadb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! wadb */ \"../dist/index.js\");\n/* harmony import */ var wadb__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(wadb__WEBPACK_IMPORTED_MODULE_0__);\n/*\n * Copyright 2020 Google Inc. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nconst connectButton = document.querySelector('#connect');\nconst disconnectButton = document.querySelector('#disconnect');\nconst output = document.querySelector('#output');\nconst input = document.querySelector('#input');\nclass MyKeyStore {\n    constructor() {\n        this.keys = [];\n    }\n    loadKeys() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.keys;\n        });\n    }\n    saveKey(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.keys.push(key);\n            console.log('Saving Key' + key);\n        });\n    }\n}\nconst options = {\n    debug: true,\n    useChecksum: false,\n    dump: false,\n    keySize: 2048,\n};\nconst keyStore = new MyKeyStore();\nlet transport = null;\nlet adbClient = null;\nlet shell = null;\nfunction appendToCode(text) {\n    const span = document.createElement('span');\n    span.innerText = text;\n    output.appendChild(span);\n    output.scrollTop = output.scrollHeight;\n}\nfunction sendCommand(cmd) {\n    shell.write(cmd + '\\n');\n}\nconnectButton.addEventListener('click', (e) => __awaiter(void 0, void 0, void 0, function* () {\n    try {\n        transport = yield wadb__WEBPACK_IMPORTED_MODULE_0__[\"WebUsbTransport\"].open(options);\n        adbClient = new wadb__WEBPACK_IMPORTED_MODULE_0__[\"AdbClient\"](transport, options, keyStore);\n        yield adbClient.connect();\n        shell = yield adbClient.interactiveShell(appendToCode);\n        disconnectButton.classList.toggle('hidden');\n        connectButton.classList.toggle('hidden');\n    }\n    catch (e) {\n        console.error('Connection Failed: ', e);\n    }\n}));\ndisconnectButton.addEventListener('click', (e) => __awaiter(void 0, void 0, void 0, function* () {\n    try {\n        yield (shell === null || shell === void 0 ? void 0 : shell.close());\n        yield (transport === null || transport === void 0 ? void 0 : transport.close());\n        transport = null;\n        adbClient = null;\n        shell = null;\n    }\n    catch (e) {\n        console.error('Error closing the connection', e);\n    }\n    disconnectButton.classList.toggle('hidden');\n    connectButton.classList.toggle('hidden');\n}));\ninput.addEventListener('keyup', (e) => {\n    if (e.keyCode === 13) {\n        e.preventDefault();\n        sendCommand(input.value);\n        input.value = 'balls';\n        return false;\n    }\n    return true;\n});\n// AV CODE\nconst beepButton = document.querySelector('#beep');\nbeepButton.addEventListener('click', (e) => __awaiter(void 0, void 0, void 0, function* () {\n    sendCommand(\"/data/user/me/beep.sh\");\n    input.value = 'balls';\n    return true;\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW50ZXJhY3RpdmVzaGVsbC50cy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9pbnRlcmFjdGl2ZXNoZWxsLnRzPzJkNjEiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiAgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqICBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiAgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IEFkYkNsaWVudCwgS2V5U3RvcmUsIE9wdGlvbnMsIFNoZWxsLCBXZWJVc2JUcmFuc3BvcnQgfSBmcm9tICd3YWRiJztcblxuY29uc3QgY29ubmVjdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjb25uZWN0JykhO1xuY29uc3QgZGlzY29ubmVjdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNkaXNjb25uZWN0JykhO1xuY29uc3Qgb3V0cHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI291dHB1dCcpITtcbmNvbnN0IGlucHV0ID0gKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNpbnB1dCcpIGFzIEhUTUxJbnB1dEVsZW1lbnQpITtcblxuY2xhc3MgTXlLZXlTdG9yZSBpbXBsZW1lbnRzIEtleVN0b3JlIHtcbiAgcHJpdmF0ZSBrZXlzOiBDcnlwdG9LZXlQYWlyW10gPSBbXTtcbiAgYXN5bmMgbG9hZEtleXMoKTogUHJvbWlzZTxDcnlwdG9LZXlQYWlyW10+IHtcbiAgICByZXR1cm4gdGhpcy5rZXlzO1xuICB9XG5cbiAgYXN5bmMgc2F2ZUtleShrZXk6IENyeXB0b0tleVBhaXIpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICB0aGlzLmtleXMucHVzaChrZXkpO1xuICAgIGNvbnNvbGUubG9nKCdTYXZpbmcgS2V5JyArIGtleSk7XG4gIH1cbn1cblxuY29uc3Qgb3B0aW9uczogT3B0aW9ucyA9IHtcbiAgZGVidWc6IHRydWUsXG4gIHVzZUNoZWNrc3VtOiBmYWxzZSxcbiAgZHVtcDogZmFsc2UsXG4gIGtleVNpemU6IDIwNDgsXG59O1xuXG5jb25zdCBrZXlTdG9yZSA9IG5ldyBNeUtleVN0b3JlKCk7XG5cbmxldCB0cmFuc3BvcnQ6IFdlYlVzYlRyYW5zcG9ydCB8IG51bGwgPSBudWxsO1xubGV0IGFkYkNsaWVudDogQWRiQ2xpZW50IHwgbnVsbCA9IG51bGw7XG5sZXQgc2hlbGw6IFNoZWxsIHwgbnVsbCA9IG51bGw7XG5cbmZ1bmN0aW9uIGFwcGVuZFRvQ29kZSh0ZXh0OiBzdHJpbmcpIHtcbiAgY29uc3Qgc3BhbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgc3Bhbi5pbm5lclRleHQgPSB0ZXh0O1xuICBvdXRwdXQuYXBwZW5kQ2hpbGQoc3Bhbik7XG4gIG91dHB1dC5zY3JvbGxUb3AgPSBvdXRwdXQuc2Nyb2xsSGVpZ2h0O1xufVxuXG5mdW5jdGlvbiBzZW5kQ29tbWFuZChjbWQ6IHN0cmluZykge1xuICBzaGVsbCEud3JpdGUoY21kICsgJ1xcbicpO1xufVxuXG5jb25uZWN0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgYXN5bmMgKGUpID0+IHtcbiAgdHJ5IHtcbiAgICB0cmFuc3BvcnQgPSBhd2FpdCBXZWJVc2JUcmFuc3BvcnQub3BlbihvcHRpb25zKTtcbiAgICBhZGJDbGllbnQgPSBuZXcgQWRiQ2xpZW50KHRyYW5zcG9ydCwgb3B0aW9ucywga2V5U3RvcmUpO1xuICAgIGF3YWl0IGFkYkNsaWVudC5jb25uZWN0KCk7XG4gICAgc2hlbGwgPSBhd2FpdCBhZGJDbGllbnQuaW50ZXJhY3RpdmVTaGVsbChhcHBlbmRUb0NvZGUpO1xuXG4gICAgZGlzY29ubmVjdEJ1dHRvbi5jbGFzc0xpc3QudG9nZ2xlKCdoaWRkZW4nKTtcbiAgICBjb25uZWN0QnV0dG9uLmNsYXNzTGlzdC50b2dnbGUoJ2hpZGRlbicpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgY29uc29sZS5lcnJvcignQ29ubmVjdGlvbiBGYWlsZWQ6ICcsIGUpO1xuICB9XG59KTtcblxuZGlzY29ubmVjdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGFzeW5jIChlKSA9PiB7XG4gIHRyeSB7XG4gICAgYXdhaXQgc2hlbGw/LmNsb3NlKCk7XG4gICAgYXdhaXQgdHJhbnNwb3J0Py5jbG9zZSgpO1xuICAgIHRyYW5zcG9ydCA9IG51bGw7XG4gICAgYWRiQ2xpZW50ID0gbnVsbDtcbiAgICBzaGVsbCA9IG51bGw7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBjbG9zaW5nIHRoZSBjb25uZWN0aW9uJywgZSk7XG4gIH1cbiAgZGlzY29ubmVjdEJ1dHRvbi5jbGFzc0xpc3QudG9nZ2xlKCdoaWRkZW4nKTtcbiAgY29ubmVjdEJ1dHRvbi5jbGFzc0xpc3QudG9nZ2xlKCdoaWRkZW4nKTtcbn0pO1xuXG5pbnB1dC5hZGRFdmVudExpc3RlbmVyKCdrZXl1cCcsIChlKSA9PiB7XG4gIGlmIChlLmtleUNvZGUgPT09IDEzKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHNlbmRDb21tYW5kKGlucHV0LnZhbHVlKTtcbiAgICBpbnB1dC52YWx1ZSA9ICdiYWxscyc7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiB0cnVlO1xufSk7XG5cbi8vIEFWIENPREVcbmNvbnN0IGJlZXBCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjYmVlcCcpITtcblxuYmVlcEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGFzeW5jIChlKSA9PiB7XG4gIHNlbmRDb21tYW5kKFwiL2RhdGEvdXNlci9tZS9iZWVwLnNoXCIpO1xuICBpbnB1dC52YWx1ZSA9ICdiYWxscyc7XG4gIHJldHVybiB0cnVlO1xufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBOzs7Ozs7Ozs7Ozs7OztBQWNBOzs7Ozs7Ozs7O0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQUE7QUFDQTtBQVNBO0FBUkE7O0FBQ0E7QUFDQTtBQUFBO0FBRUE7O0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/interactiveshell.ts\n");

/***/ })

/******/ });